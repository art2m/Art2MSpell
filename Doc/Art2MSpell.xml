<?xml version="1.0" encoding="utf-8"?>
<Projects>
  <Project>
    <Properties>
      <Name>Art2MSpell</Name>
      <FileName>Art2MSpell.csproj</FileName>
      <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Art2MSpell.csproj</FullPath>
      <LanguageGUID>{B5E9BD34-6D3E-4B5D-925E-8A43B79820B4}</LanguageGUID>
      <LanguageDescription>C#</LanguageDescription>
      <OutputType>Windows Exe</OutputType>
      <OutputTypeEx>0</OutputTypeEx>
      <TargetFrameworkMoniker>.NETFramework,Version=v4.6.1</TargetFrameworkMoniker>
      <ComVisible>False</ComVisible>
      <EnableSecurityDebugging>True</EnableSecurityDebugging>
      <OptionCompare>Binary</OptionCompare>
      <StartupObject />
      <ManifestCertificateThumbprint />
      <Trademark />
      <Title>Art2MSpell</Title>
      <AssemblyOriginatorKeyFileType>1</AssemblyOriginatorKeyFileType>
      <AssemblyOriginatorKeyMode>None</AssemblyOriginatorKeyMode>
      <AssemblyKeyContainerName />
      <ProjectType>Local</ProjectType>
      <ReferencePath />
      <PreBuildEvent />
      <AutoGenerateBindingRedirects>True</AutoGenerateBindingRedirects>
      <Copyright>Copyright ©  2018</Copyright>
      <ApplicationIcon />
      <ExcludedPermissions />
      <RunPostBuildEvent>1</RunPostBuildEvent>
      <DefaultTargetSchema>IE50</DefaultTargetSchema>
      <RootNamespace>Art2MSpell</RootNamespace>
      <ManifestTimestampUrl />
      <ManifestKeyFile />
      <DebugSecurityZoneURL />
      <Product>Art2MSpell</Product>
      <PostBuildEvent />
      <OptionStrict>Off</OptionStrict>
      <DefaultHTMLPageLayout>Grid</DefaultHTMLPageLayout>
      <DelaySign>False</DelaySign>
      <JetExtenderProvider.ToString>JetBrains.VsIntegration.ProjectModel.PropertiesExtender.PropertiesExtender</JetExtenderProvider.ToString>
      <NeutralResourcesLanguage />
      <OptionExplicit>On</OptionExplicit>
      <OutputFileName>Art2MSpell.exe</OutputFileName>
      <AssemblyGuid>41cf05c3-fb80-461f-8d4f-4928edd486d7</AssemblyGuid>
      <GenerateManifests>False</GenerateManifests>
      <AssemblyVersion>1.0.0.0</AssemblyVersion>
      <Win32ResourceFile />
      <Description />
      <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\</URL>
      <DefaultClientScript>JScript</DefaultClientScript>
      <TargetFramework>262406</TargetFramework>
      <SignManifests>False</SignManifests>
      <AssemblyType>0</AssemblyType>
      <AssemblyKeyProviderName />
      <TypeComplianceDiagnostics>False</TypeComplianceDiagnostics>
      <Company />
      <AssemblyOriginatorKeyFile />
      <ApplicationManifest>DefaultManifest</ApplicationManifest>
      <AssemblyFileVersion>1.0.0.0</AssemblyFileVersion>
      <AssemblyName>Art2MSpell</AssemblyName>
      <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\</LocalPath>
      <DefaultNamespace>Art2MSpell</DefaultNamespace>
      <LinkRepair>False</LinkRepair>
      <TargetZone />
      <SignAssembly>False</SignAssembly>
    </Properties>
    <References>
      <Reference>
        <Properties>
          <Name>JetBrains.Annotations</Name>
          <FileName>JetBrains.Annotations.dll</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\packages\JetBrains.Annotations.2019.1.1\lib\net20\JetBrains.Annotations.dll</FullPath>
          <Description>Annotations to increase accuracy of ReSharper code inspections</Description>
          <StrongName>True</StrongName>
          <CopyLocal>True</CopyLocal>
          <Identity>JetBrains.Annotations</Identity>
          <Culture />
          <Version>2019.1.1.0</Version>
          <MajorVersion>2019</MajorVersion>
          <MinorVersion>1</MinorVersion>
          <BuildNumber>1</BuildNumber>
          <RevisionNumber>0</RevisionNumber>
          <Type>Assembly</Type>
        </Properties>
      </Reference>
      <Reference>
        <Properties>
          <Name>NHunspell</Name>
          <FileName>NHunspell.dll</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\packages\NHunspell.1.2.5554.16953\lib\net\NHunspell.dll</FullPath>
          <Description>NHunspell Wrapper Library</Description>
          <StrongName>True</StrongName>
          <CopyLocal>True</CopyLocal>
          <Identity>NHunspell</Identity>
          <Culture />
          <Version>1.2.5554.16953</Version>
          <MajorVersion>1</MajorVersion>
          <MinorVersion>2</MinorVersion>
          <BuildNumber>5554</BuildNumber>
          <RevisionNumber>16953</RevisionNumber>
          <Type>Assembly</Type>
        </Properties>
      </Reference>
      <Reference>
        <Properties>
          <Name>System</Name>
          <FileName>System.dll</FileName>
          <FullPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6.1\System.dll</FullPath>
          <Description>System.dll</Description>
          <StrongName>True</StrongName>
          <CopyLocal>False</CopyLocal>
          <Identity>System</Identity>
          <Culture />
          <Version>4.0.0.0</Version>
          <MajorVersion>4</MajorVersion>
          <MinorVersion>0</MinorVersion>
          <BuildNumber>0</BuildNumber>
          <RevisionNumber>0</RevisionNumber>
          <Type>Assembly</Type>
        </Properties>
      </Reference>
      <Reference>
        <Properties>
          <Name>System.Core</Name>
          <FileName>System.Core.dll</FileName>
          <FullPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6.1\System.Core.dll</FullPath>
          <Description>System.Core.dll</Description>
          <StrongName>True</StrongName>
          <CopyLocal>False</CopyLocal>
          <Identity>System.Core</Identity>
          <Culture />
          <Version>4.0.0.0</Version>
          <MajorVersion>4</MajorVersion>
          <MinorVersion>0</MinorVersion>
          <BuildNumber>0</BuildNumber>
          <RevisionNumber>0</RevisionNumber>
          <Type>Assembly</Type>
        </Properties>
      </Reference>
      <Reference>
        <Properties>
          <Name>System.Speech</Name>
          <FileName>System.Speech.dll</FileName>
          <FullPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6.1\System.Speech.dll</FullPath>
          <Description>System.Speech.dll</Description>
          <StrongName>True</StrongName>
          <CopyLocal>False</CopyLocal>
          <Identity>System.Speech</Identity>
          <Culture />
          <Version>4.0.0.0</Version>
          <MajorVersion>4</MajorVersion>
          <MinorVersion>0</MinorVersion>
          <BuildNumber>0</BuildNumber>
          <RevisionNumber>0</RevisionNumber>
          <Type>Assembly</Type>
        </Properties>
      </Reference>
      <Reference>
        <Properties>
          <Name>System.Xml.Linq</Name>
          <FileName>System.Xml.Linq.dll</FileName>
          <FullPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6.1\System.Xml.Linq.dll</FullPath>
          <Description>System.Xml.Linq.dll</Description>
          <StrongName>True</StrongName>
          <CopyLocal>False</CopyLocal>
          <Identity>System.Xml.Linq</Identity>
          <Culture />
          <Version>4.0.0.0</Version>
          <MajorVersion>4</MajorVersion>
          <MinorVersion>0</MinorVersion>
          <BuildNumber>0</BuildNumber>
          <RevisionNumber>0</RevisionNumber>
          <Type>Assembly</Type>
        </Properties>
      </Reference>
      <Reference>
        <Properties>
          <Name>System.Data.DataSetExtensions</Name>
          <FileName>System.Data.DataSetExtensions.dll</FileName>
          <FullPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6.1\System.Data.DataSetExtensions.dll</FullPath>
          <Description>System.Data.DataSetExtensions.dll</Description>
          <StrongName>True</StrongName>
          <CopyLocal>False</CopyLocal>
          <Identity>System.Data.DataSetExtensions</Identity>
          <Culture />
          <Version>4.0.0.0</Version>
          <MajorVersion>4</MajorVersion>
          <MinorVersion>0</MinorVersion>
          <BuildNumber>0</BuildNumber>
          <RevisionNumber>0</RevisionNumber>
          <Type>Assembly</Type>
        </Properties>
      </Reference>
      <Reference>
        <Properties>
          <Name>Microsoft.CSharp</Name>
          <FileName>Microsoft.CSharp.dll</FileName>
          <FullPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6.1\Microsoft.CSharp.dll</FullPath>
          <Description>Microsoft.CSharp.dll</Description>
          <StrongName>True</StrongName>
          <CopyLocal>False</CopyLocal>
          <Identity>Microsoft.CSharp</Identity>
          <Culture />
          <Version>4.0.0.0</Version>
          <MajorVersion>4</MajorVersion>
          <MinorVersion>0</MinorVersion>
          <BuildNumber>0</BuildNumber>
          <RevisionNumber>0</RevisionNumber>
          <Type>Assembly</Type>
        </Properties>
      </Reference>
      <Reference>
        <Properties>
          <Name>System.Data</Name>
          <FileName>System.Data.dll</FileName>
          <FullPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6.1\System.Data.dll</FullPath>
          <Description>System.Data.dll</Description>
          <StrongName>True</StrongName>
          <CopyLocal>False</CopyLocal>
          <Identity>System.Data</Identity>
          <Culture />
          <Version>4.0.0.0</Version>
          <MajorVersion>4</MajorVersion>
          <MinorVersion>0</MinorVersion>
          <BuildNumber>0</BuildNumber>
          <RevisionNumber>0</RevisionNumber>
          <Type>Assembly</Type>
        </Properties>
      </Reference>
      <Reference>
        <Properties>
          <Name>System.Deployment</Name>
          <FileName>System.Deployment.dll</FileName>
          <FullPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6.1\System.Deployment.dll</FullPath>
          <Description>System.Deployment.dll</Description>
          <StrongName>True</StrongName>
          <CopyLocal>False</CopyLocal>
          <Identity>System.Deployment</Identity>
          <Culture />
          <Version>4.0.0.0</Version>
          <MajorVersion>4</MajorVersion>
          <MinorVersion>0</MinorVersion>
          <BuildNumber>0</BuildNumber>
          <RevisionNumber>0</RevisionNumber>
          <Type>Assembly</Type>
        </Properties>
      </Reference>
      <Reference>
        <Properties>
          <Name>System.Drawing</Name>
          <FileName>System.Drawing.dll</FileName>
          <FullPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6.1\System.Drawing.dll</FullPath>
          <Description>System.Drawing.dll</Description>
          <StrongName>True</StrongName>
          <CopyLocal>False</CopyLocal>
          <Identity>System.Drawing</Identity>
          <Culture />
          <Version>4.0.0.0</Version>
          <MajorVersion>4</MajorVersion>
          <MinorVersion>0</MinorVersion>
          <BuildNumber>0</BuildNumber>
          <RevisionNumber>0</RevisionNumber>
          <Type>Assembly</Type>
        </Properties>
      </Reference>
      <Reference>
        <Properties>
          <Name>System.Net.Http</Name>
          <FileName>System.Net.Http.dll</FileName>
          <FullPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6.1\System.Net.Http.dll</FullPath>
          <Description>System.Net.Http.dll</Description>
          <StrongName>True</StrongName>
          <CopyLocal>False</CopyLocal>
          <Identity>System.Net.Http</Identity>
          <Culture />
          <Version>4.0.0.0</Version>
          <MajorVersion>4</MajorVersion>
          <MinorVersion>0</MinorVersion>
          <BuildNumber>0</BuildNumber>
          <RevisionNumber>0</RevisionNumber>
          <Type>Assembly</Type>
        </Properties>
      </Reference>
      <Reference>
        <Properties>
          <Name>System.Windows.Forms</Name>
          <FileName>System.Windows.Forms.dll</FileName>
          <FullPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6.1\System.Windows.Forms.dll</FullPath>
          <Description>System.Windows.Forms.dll</Description>
          <StrongName>True</StrongName>
          <CopyLocal>False</CopyLocal>
          <Identity>System.Windows.Forms</Identity>
          <Culture />
          <Version>4.0.0.0</Version>
          <MajorVersion>4</MajorVersion>
          <MinorVersion>0</MinorVersion>
          <BuildNumber>0</BuildNumber>
          <RevisionNumber>0</RevisionNumber>
          <Type>Assembly</Type>
        </Properties>
      </Reference>
      <Reference>
        <Properties>
          <Name>System.Xml</Name>
          <FileName>System.Xml.dll</FileName>
          <FullPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6.1\System.Xml.dll</FullPath>
          <Description>System.Xml.dll</Description>
          <StrongName>True</StrongName>
          <CopyLocal>False</CopyLocal>
          <Identity>System.Xml</Identity>
          <Culture />
          <Version>4.0.0.0</Version>
          <MajorVersion>4</MajorVersion>
          <MinorVersion>0</MinorVersion>
          <BuildNumber>0</BuildNumber>
          <RevisionNumber>0</RevisionNumber>
          <Type>Assembly</Type>
        </Properties>
      </Reference>
      <Reference>
        <Properties>
          <Name>mscorlib</Name>
          <FileName>mscorlib.dll</FileName>
          <FullPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6.1\mscorlib.dll</FullPath>
          <Description>mscorlib.dll</Description>
          <StrongName>True</StrongName>
          <CopyLocal>False</CopyLocal>
          <Identity>mscorlib</Identity>
          <Culture />
          <Version>4.0.0.0</Version>
          <MajorVersion>4</MajorVersion>
          <MinorVersion>0</MinorVersion>
          <BuildNumber>0</BuildNumber>
          <RevisionNumber>0</RevisionNumber>
          <Type>Assembly</Type>
        </Properties>
      </Reference>
    </References>
    <Imports />
    <Files>
      <File>
        <Properties>
          <FileName>MyMessages.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Classes\MyMessages.cs</FullPath>
          <SubType>Code</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/9/2019 2:01:02 PM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Classes\MyMessages.cs</URL>
          <Filesize>8686</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Classes\MyMessages.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Classes</Name>
              <FullName>Art2MSpell.Classes</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Classes</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Text</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Windows.Forms</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;Create message boxes.&lt;/summary&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>MyMessages</Name>
                  <FullName>Art2MSpell.Classes.MyMessages</FullName>
                  <DocComment>&lt;summary&gt;Create message boxes.&lt;/summary&gt;</DocComment>
                  <XmlDocComment>
                    <summary>Create message boxes.</summary>
                  </XmlDocComment>
                  <Kind>Class</Kind>
                  <Declaration>public static class MyMessages</Declaration>
                  <Access>public</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Classes</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Object</Name>
                      <FullName>System.Object</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>The error message to be displayed.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ErrorMessage</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.ErrorMessage</FullName>
                      <DocComment>&lt;summary&gt;
The error message to be displayed.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
The error message to be displayed.
</summary>
                      </XmlDocComment>
                      <Kind>Property</Kind>
                      <Declaration>public static string ErrorMessage</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.String</TypeFullName>
                      <TypeName>String</TypeName>
                      <TypeAliasedName>string</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>The information message to be displayed.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>InformationMessage</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.InformationMessage</FullName>
                      <DocComment>&lt;summary&gt;
The information message to be displayed.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
The information message to be displayed.
</summary>
                      </XmlDocComment>
                      <Kind>Property</Kind>
                      <Declaration>public static string InformationMessage</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.String</TypeFullName>
                      <TypeName>String</TypeName>
                      <TypeAliasedName>string</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Contains the name of the class where the message box was called from.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>NameOfClass</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.NameOfClass</FullName>
                      <DocComment>&lt;summary&gt;
Contains the name of the class where the message box was called from.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Contains the name of the class where the message box was called from.
</summary>
                      </XmlDocComment>
                      <Kind>Property</Kind>
                      <Declaration>public static string NameOfClass</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.String</TypeFullName>
                      <TypeName>String</TypeName>
                      <TypeAliasedName>string</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Contains the name of the method where the message box is called from.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>NameOfMethod</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.NameOfMethod</FullName>
                      <DocComment>&lt;summary&gt;
Contains the name of the method where the message box is called from.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Contains the name of the method where the message box is called from.
</summary>
                      </XmlDocComment>
                      <Kind>Property</Kind>
                      <Declaration>public static string NameOfMethod</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.String</TypeFullName>
                      <TypeName>String</TypeName>
                      <TypeAliasedName>string</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Contains the question to ask the user.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>QuestionMessage</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.QuestionMessage</FullName>
                      <DocComment>&lt;summary&gt;
Contains the question to ask the user.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Contains the question to ask the user.
</summary>
                      </XmlDocComment>
                      <Kind>Property</Kind>
                      <Declaration>public static string QuestionMessage</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.String</TypeFullName>
                      <TypeName>String</TypeName>
                      <TypeAliasedName>string</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Contains the warning message to be displayed.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>WarningMessage</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.WarningMessage</FullName>
                      <DocComment>&lt;summary&gt;
Contains the warning message to be displayed.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Contains the warning message to be displayed.
</summary>
                      </XmlDocComment>
                      <Kind>Property</Kind>
                      <Declaration>public static string WarningMessage</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.String</TypeFullName>
                      <TypeName>String</TypeName>
                      <TypeAliasedName>string</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Builds the error string.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="className"&gt;Class name.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="methodName"&gt;Method name.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="errorMsg"&gt;The error message to be displayed.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="exceptionMessage"&gt;Exception message.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>BuildErrorString</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.BuildErrorString</FullName>
                      <DocComment>&lt;summary&gt;
Builds the error string.
&lt;/summary&gt;
&lt;param name="className"&gt;Class name.&lt;/param&gt;
&lt;param name="methodName"&gt;Method name.&lt;/param&gt;
&lt;param name="errorMsg"&gt;The error message to be displayed.&lt;/param&gt;
&lt;param name="exceptionMessage"&gt;Exception message.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static void BuildErrorString(string className, string methodName, string errorMsg, string exceptionMessage)</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>className</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.BuildErrorString.className</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string className</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>methodName</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.BuildErrorString.methodName</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string methodName</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>errorMsg</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.BuildErrorString.errorMsg</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string errorMsg</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>exceptionMessage</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.BuildErrorString.exceptionMessage</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string exceptionMessage</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Shows the error message.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="msg"&gt;The errpr message to be displayed.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="methodName"&gt;Name of the method.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ShowErrorMessage</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.ShowErrorMessage</FullName>
                      <DocComment>&lt;summary&gt;
Shows the error message.
&lt;/summary&gt;
&lt;param name="msg"&gt;The errpr message to be displayed.&lt;/param&gt;
&lt;param name="methodName"&gt;Name of the method.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static void ShowErrorMessage(string msg, string methodName)</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>msg</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowErrorMessage.msg</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string msg</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>methodName</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowErrorMessage.methodName</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string methodName</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Display error message box with message, class name and method name.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="msg"&gt;The error message to be displayed.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="className"&gt;The class name.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="methodName"&gt;The method name.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ShowErrorMessageBox</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.ShowErrorMessageBox</FullName>
                      <DocComment>&lt;summary&gt;
Display error message box with message, class name and method name.
&lt;/summary&gt;
&lt;param name="msg"&gt;The error message to be displayed.&lt;/param&gt;
&lt;param name="className"&gt;The class name.&lt;/param&gt;
&lt;param name="methodName"&gt;The method name.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static void ShowErrorMessageBox(string msg, string className, string methodName)</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>True</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>msg</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowErrorMessageBox.msg</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string msg</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>className</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowErrorMessageBox.className</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string className</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>methodName</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowErrorMessageBox.methodName</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string methodName</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Display error message box with method name and message.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ShowErrorMessageBox</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.ShowErrorMessageBox</FullName>
                      <DocComment>&lt;summary&gt;
Display error message box with method name and message.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Display error message box with method name and message.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>public static void ShowErrorMessageBox()</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>True</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Shows the information message.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="msg"&gt;The Information message to be displayed.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="methodName"&gt;The name of the method.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ShowInformationMessage</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.ShowInformationMessage</FullName>
                      <DocComment>&lt;summary&gt;
Shows the information message.
&lt;/summary&gt;
&lt;param name="msg"&gt;The Information message to be displayed.&lt;/param&gt;
&lt;param name="methodName"&gt;The name of the method.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static void ShowInformationMessage(string msg, string methodName)</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>msg</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowInformationMessage.msg</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string msg</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>methodName</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowInformationMessage.methodName</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string methodName</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Shows the information message box.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="msg"&gt;The Information message to be displayed.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="className"&gt;The name of the class.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="methodName"&gt;The name of the method.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ShowInformationMessageBox</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.ShowInformationMessageBox</FullName>
                      <DocComment>&lt;summary&gt;
Shows the information message box.
&lt;/summary&gt;
&lt;param name="msg"&gt;The Information message to be displayed.&lt;/param&gt;
&lt;param name="className"&gt;The name of the class.&lt;/param&gt;
&lt;param name="methodName"&gt;The name of the method.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static void ShowInformationMessageBox(string msg, string className, string methodName)</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>True</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>msg</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowInformationMessageBox.msg</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string msg</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>className</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowInformationMessageBox.className</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string className</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>methodName</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowInformationMessageBox.methodName</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string methodName</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Display information message box with method name and message.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ShowInformationMessageBox</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.ShowInformationMessageBox</FullName>
                      <DocComment>&lt;summary&gt;
Display information message box with method name and message.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Display information message box with method name and message.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>public static void ShowInformationMessageBox()</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>True</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Shows the question message.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="msg"&gt;The question message to be displayed.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="methodName"&gt;The name of the method.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;yes or no answer to the question.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ShowQuestionMessage</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.ShowQuestionMessage</FullName>
                      <DocComment>&lt;summary&gt;
Shows the question message.
&lt;/summary&gt;
&lt;param name="msg"&gt;The question message to be displayed.&lt;/param&gt;
&lt;param name="methodName"&gt;The name of the method.&lt;/param&gt;
&lt;returns&gt;yes or no answer to the question.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static DialogResult ShowQuestionMessage(string msg, string methodName)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Windows.Forms.DialogResult</TypeFullName>
                      <TypeName>DialogResult</TypeName>
                      <TypeAliasedName>DialogResult</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>msg</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowQuestionMessage.msg</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string msg</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>methodName</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowQuestionMessage.methodName</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string methodName</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Display question message box with method name and message.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;Return yes or no answer to the question.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ShowQuestionMessageBox</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.ShowQuestionMessageBox</FullName>
                      <DocComment>&lt;summary&gt;
Display question message box with method name and message.
&lt;/summary&gt;
&lt;returns&gt;Return yes or no answer to the question.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static DialogResult ShowQuestionMessageBox()</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Windows.Forms.DialogResult</TypeFullName>
                      <TypeName>DialogResult</TypeName>
                      <TypeAliasedName>DialogResult</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Shows the warning message.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="msg"&gt;The warning message to be displayed.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="methodname"&gt;The name of the method.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ShowWarningMessage</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.ShowWarningMessage</FullName>
                      <DocComment>&lt;summary&gt;
Shows the warning message.
&lt;/summary&gt;
&lt;param name="msg"&gt;The warning message to be displayed.&lt;/param&gt;
&lt;param name="methodname"&gt;The name of the method.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static void ShowWarningMessage(string msg, string methodname)</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>msg</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowWarningMessage.msg</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string msg</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>methodname</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowWarningMessage.methodname</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string methodname</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Shows the warning message box.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="msg"&gt;The warning message to be displayed.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="className"&gt;Name of the class.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="methodName"&gt;Name of the method.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ShowWarningMessageBox</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.ShowWarningMessageBox</FullName>
                      <DocComment>&lt;summary&gt;
Shows the warning message box.
&lt;/summary&gt;
&lt;param name="msg"&gt;The warning message to be displayed.&lt;/param&gt;
&lt;param name="className"&gt;Name of the class.&lt;/param&gt;
&lt;param name="methodName"&gt;Name of the method.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static void ShowWarningMessageBox(string msg, string className, string methodName)</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>True</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>msg</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowWarningMessageBox.msg</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string msg</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>className</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowWarningMessageBox.className</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string className</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>methodName</Name>
                          <FullName>Art2MSpell.Classes.MyMessages.ShowWarningMessageBox.methodName</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string methodName</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Display warning message box with method name and message.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ShowWarningMessageBox</Name>
                      <FullName>Art2MSpell.Classes.MyMessages.ShowWarningMessageBox</FullName>
                      <DocComment>&lt;summary&gt;
Display warning message box with method name and message.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Display warning message box with method name and message.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>public static void ShowWarningMessageBox()</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>True</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>SpellingListClass.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Classes\SpellingListClass.cs</FullPath>
          <SubType>Code</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/14/2019 9:04:20 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Classes\SpellingListClass.cs</URL>
          <Filesize>12186</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Classes\SpellingListClass.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Classes</Name>
              <FullName>Art2MSpell.Classes</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Classes</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Collections.Generic</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Diagnostics</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.IO</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Linq</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Reflection</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Speech.Synthesis</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>Collections</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>NHunspell</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;</CommentLine>
                  <CommentLine>Spelling list class reads and writes spelling list to file. Retrieves path to spelling lists.</CommentLine>
                  <CommentLine>&lt;/summary&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>SpellingListClass</Name>
                  <FullName>Art2MSpell.Classes.SpellingListClass</FullName>
                  <DocComment>&lt;summary&gt;
    Spelling list class reads and writes spelling list to file. Retrieves path to spelling lists.
&lt;/summary&gt;</DocComment>
                  <XmlDocComment>
                    <summary>
    Spelling list class reads and writes spelling list to file. Retrieves path to spelling lists.
</summary>
                  </XmlDocComment>
                  <Kind>Class</Kind>
                  <Declaration>public static class SpellingListClass</Declaration>
                  <Access>public</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Classes</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Object</Name>
                      <FullName>System.Object</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;Declare speech synthesizer object.&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>Ss</Name>
                      <FullName>Art2MSpell.Classes.SpellingListClass.Ss</FullName>
                      <DocComment>&lt;summary&gt;Declare speech synthesizer object.&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>Declare speech synthesizer object.</summary>
                      </XmlDocComment>
                      <Kind>Field</Kind>
                      <Declaration>private static readonly SpeechSynthesizer Ss = new SpeechSynthesizer();</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Speech.Synthesis.SpeechSynthesizer</TypeFullName>
                      <TypeName>SpeechSynthesizer</TypeName>
                      <TypeAliasedName>SpeechSynthesizer</TypeAliasedName>
                      <InitExpression>new SpeechSynthesizer()</InitExpression>
                      <IsConstant>False</IsConstant>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets list of words from dictionary for the misspelled word.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt;Misspelled word.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/10/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>CheckDictionary</Name>
                      <FullName>Art2MSpell.Classes.SpellingListClass.CheckDictionary</FullName>
                      <DocComment>&lt;summary&gt;
    Gets list of words from dictionary for the misspelled word.
&lt;/summary&gt;
&lt;param name="word"&gt;Misspelled word.&lt;/param&gt;
&lt;created&gt;art2m,5/10/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static void CheckDictionary(string word)</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Classes.SpellingListClass.CheckDictionary.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Check to see if the word is already in the list box.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="duplicate"&gt;The items from the list box.&lt;/param&gt;</CommentLine>
                      <CommentLine>///</CommentLine>
                      <CommentLine>&lt;param name="addWord"&gt;The word to check for.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;True if word is all ready in the list else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;,5/10/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;,5/10/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>CheckDuplicateWord</Name>
                      <FullName>Art2MSpell.Classes.SpellingListClass.CheckDuplicateWord</FullName>
                      <DocComment>&lt;summary&gt;
    Check to see if the word is already in the list box.
&lt;/summary&gt;
&lt;param name="duplicate"&gt;The items from the list box.&lt;/param&gt;
///
&lt;param name="addWord"&gt;The word to check for.&lt;/param&gt;
&lt;returns&gt;True if word is all ready in the list else false.&lt;/returns&gt;
&lt;created&gt;,5/10/2019&lt;/created&gt;
&lt;changed&gt;,5/10/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool CheckDuplicateWord(List&lt;string&gt; duplicate, string addWord)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>duplicate</Name>
                          <FullName>Art2MSpell.Classes.SpellingListClass.CheckDuplicateWord.duplicate</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>List&lt;string&gt; duplicate</Declaration>
                          <Access />
                          <TypeFullName>System.Collections.Generic.List&lt;System.String&gt;</TypeFullName>
                          <TypeName>List&lt;System.String&gt;</TypeName>
                          <TypeAliasedName>List&lt;System.String&gt;</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>addWord</Name>
                          <FullName>Art2MSpell.Classes.SpellingListClass.CheckDuplicateWord.addWord</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string addWord</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Check spelling word for the correct spelling.</CommentLine>
                      <CommentLine>If incorrect spelling the get a list of possible correct spelling.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt;The word to check spelling on.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;True if word is spelled correctly else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/10/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>CheckWord</Name>
                      <FullName>Art2MSpell.Classes.SpellingListClass.CheckWord</FullName>
                      <DocComment>&lt;summary&gt;
    Check spelling word for the correct spelling.
    If incorrect spelling the get a list of possible correct spelling.
&lt;/summary&gt;
&lt;param name="word"&gt;The word to check spelling on.&lt;/param&gt;
&lt;returns&gt;True if word is spelled correctly else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/10/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool CheckWord(string word)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Classes.SpellingListClass.CheckWord.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Reads the spelling list from the file the user has opened.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="filePath"&gt;The file path to the spelling list user wishes to open.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;True if the spelling list words are added to collection else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/10/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ReadFile</Name>
                      <FullName>Art2MSpell.Classes.SpellingListClass.ReadFile</FullName>
                      <DocComment>&lt;summary&gt;
    Reads the spelling list from the file the user has opened.
&lt;/summary&gt;
&lt;param name="filePath"&gt;The file path to the spelling list user wishes to open.&lt;/param&gt;
&lt;returns&gt;True if the spelling list words are added to collection else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/10/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool ReadFile(string filePath)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>filePath</Name>
                          <FullName>Art2MSpell.Classes.SpellingListClass.ReadFile.filePath</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string filePath</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Validate real spelling list by reading header from file should be Art2MmSpell!!</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="filePath"&gt;The path to the file.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;True if valid spelling list else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ReadHeader</Name>
                      <FullName>Art2MSpell.Classes.SpellingListClass.ReadHeader</FullName>
                      <DocComment>&lt;summary&gt;
    Validate real spelling list by reading header from file should be Art2MmSpell!!
&lt;/summary&gt;
&lt;param name="filePath"&gt;The path to the file.&lt;/param&gt;
&lt;returns&gt;True if valid spelling list else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool ReadHeader(string filePath)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>filePath</Name>
                          <FullName>Art2MSpell.Classes.SpellingListClass.ReadHeader.filePath</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string filePath</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Say the string passed into it.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt;The word or can be string.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/10/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SpeakString</Name>
                      <FullName>Art2MSpell.Classes.SpellingListClass.SpeakString</FullName>
                      <DocComment>&lt;summary&gt;
    Say the string passed into it.
&lt;/summary&gt;
&lt;param name="word"&gt;The word or can be string.&lt;/param&gt;
&lt;created&gt;art2m,5/10/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static void SpeakString(string word)</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Classes.SpellingListClass.SpeakString.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Writes spelling words to file.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="filePath"&gt;The file path to write the spelling words to.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;True if spelling words written to file else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/10/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>WriteToFile</Name>
                      <FullName>Art2MSpell.Classes.SpellingListClass.WriteToFile</FullName>
                      <DocComment>&lt;summary&gt;
    Writes spelling words to file.
&lt;/summary&gt;
&lt;param name="filePath"&gt;The file path to write the spelling words to.&lt;/param&gt;
&lt;returns&gt;True if spelling words written to file else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/10/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool WriteToFile(string filePath)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>filePath</Name>
                          <FullName>Art2MSpell.Classes.SpellingListClass.WriteToFile.filePath</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string filePath</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Compare the words in the list with new word to add.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>///</CommentLine>
                      <CommentLine>&lt;param name="listWord"&gt;The word from the list box to be compared with new word.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="addWord"&gt;The word to be evaluated.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;True if word to be added matches the word from the list else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/13/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/13/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>CompareWordListToNewWord</Name>
                      <FullName>Art2MSpell.Classes.SpellingListClass.CompareWordListToNewWord</FullName>
                      <DocComment>&lt;summary&gt;
    Compare the words in the list with new word to add.
&lt;/summary&gt;
///
&lt;param name="listWord"&gt;The word from the list box to be compared with new word.&lt;/param&gt;
&lt;param name="addWord"&gt;The word to be evaluated.&lt;/param&gt;
&lt;returns&gt;True if word to be added matches the word from the list else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/13/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/13/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private static bool CompareWordListToNewWord(string listWord, string addWord)</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>listWord</Name>
                          <FullName>Art2MSpell.Classes.SpellingListClass.CompareWordListToNewWord.listWord</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string listWord</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>addWord</Name>
                          <FullName>Art2MSpell.Classes.SpellingListClass.CompareWordListToNewWord.addWord</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string addWord</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Loop threw the words from the list box. Call method to check for duplicate words.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="duplicate"&gt;The list of words contained in the list box.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="addWord"&gt;The word being added by user.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;True if duplicate word found in lest box else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/13/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/13/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>LoopThrewWordsList</Name>
                      <FullName>Art2MSpell.Classes.SpellingListClass.LoopThrewWordsList</FullName>
                      <DocComment>&lt;summary&gt;
    Loop threw the words from the list box. Call method to check for duplicate words.
&lt;/summary&gt;
&lt;param name="duplicate"&gt;The list of words contained in the list box.&lt;/param&gt;
&lt;param name="addWord"&gt;The word being added by user.&lt;/param&gt;
&lt;returns&gt;True if duplicate word found in lest box else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/13/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/13/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private static bool LoopThrewWordsList(IReadOnlyCollection&lt;string&gt; duplicate, string addWord)</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>duplicate</Name>
                          <FullName>Art2MSpell.Classes.SpellingListClass.LoopThrewWordsList.duplicate</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>IReadOnlyCollection&lt;string&gt; duplicate</Declaration>
                          <Access />
                          <TypeFullName>System.Collections.Generic.IReadOnlyCollection&lt;System.String&gt;</TypeFullName>
                          <TypeName>IReadOnlyCollection&lt;System.String&gt;</TypeName>
                          <TypeAliasedName>IReadOnlyCollection&lt;System.String&gt;</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>addWord</Name>
                          <FullName>Art2MSpell.Classes.SpellingListClass.LoopThrewWordsList.addWord</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string addWord</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>SpellingPropertiesClass.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Classes\SpellingPropertiesClass.cs</FullPath>
          <SubType>Code</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/9/2019 1:59:32 PM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Classes\SpellingPropertiesClass.cs</URL>
          <Filesize>4533</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Classes\SpellingPropertiesClass.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Classes</Name>
              <FullName>Art2MSpell.Classes</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Classes</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;</CommentLine>
                  <CommentLine>Holds properties for spelling program.</CommentLine>
                  <CommentLine>&lt;/summary&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>SpellingPropertiesClass</Name>
                  <FullName>Art2MSpell.Classes.SpellingPropertiesClass</FullName>
                  <DocComment>&lt;summary&gt;
Holds properties for spelling program.
&lt;/summary&gt;</DocComment>
                  <XmlDocComment>
                    <summary>
Holds properties for spelling program.
</summary>
                  </XmlDocComment>
                  <Kind>Class</Kind>
                  <Declaration>public static class SpellingPropertiesClass</Declaration>
                  <Access>public</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Classes</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Object</Name>
                      <FullName>System.Object</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>The get spell it header so that we know spelling list is</CommentLine>
                      <CommentLine>used by Spell-It program.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>art2MSpellHeader</Name>
                      <FullName>Art2MSpell.Classes.SpellingPropertiesClass.art2MSpellHeader</FullName>
                      <DocComment>&lt;summary&gt;
    The get spell it header so that we know spelling list is
    used by Spell-It program.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    The get spell it header so that we know spelling list is
    used by Spell-It program.
</summary>
                      </XmlDocComment>
                      <Kind>Constant</Kind>
                      <Declaration>private const string art2MSpellHeader = "Art2MSpell!!";</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.String</TypeFullName>
                      <TypeName>String</TypeName>
                      <TypeAliasedName>string</TypeAliasedName>
                      <InitExpression>"Art2MSpell!!"</InitExpression>
                      <IsConstant>True</IsConstant>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets or sets a value indicating whether [Spelling list is a spell it spelling list].</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;value&gt;</CommentLine>
                      <CommentLine>&lt;c&gt;true&lt;/c&gt; if [spell it spelling list]; otherwise, &lt;c&gt;false&lt;/c&gt;.</CommentLine>
                      <CommentLine>&lt;/value&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>Art2MSpellSpellingList</Name>
                      <FullName>Art2MSpell.Classes.SpellingPropertiesClass.Art2MSpellSpellingList</FullName>
                      <DocComment>&lt;summary&gt;
    Gets or sets a value indicating whether [Spelling list is a spell it spelling list].
&lt;/summary&gt;
&lt;value&gt;
    &lt;c&gt;true&lt;/c&gt; if [spell it spelling list]; otherwise, &lt;c&gt;false&lt;/c&gt;.
&lt;/value&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Property</Kind>
                      <Declaration>public static bool Art2MSpellSpellingList</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets or sets a value indicating whether [creating new spelling list].</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;value&gt;&lt;c&gt;true&lt;/c&gt; if [creating new spelling list]; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>CreatingNewSpellingList</Name>
                      <FullName>Art2MSpell.Classes.SpellingPropertiesClass.CreatingNewSpellingList</FullName>
                      <DocComment>&lt;summary&gt;
Gets or sets a value indicating whether [creating new spelling list].
&lt;/summary&gt;
&lt;value&gt;&lt;c&gt;true&lt;/c&gt; if [creating new spelling list]; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Property</Kind>
                      <Declaration>public static bool CreatingNewSpellingList</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets or sets a value indicating whether [delete spelling list].</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;value&gt;&lt;c&gt;true&lt;/c&gt; if [delete spelling list]; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>DeleteSpellingList</Name>
                      <FullName>Art2MSpell.Classes.SpellingPropertiesClass.DeleteSpellingList</FullName>
                      <DocComment>&lt;summary&gt;
Gets or sets a value indicating whether [delete spelling list].
&lt;/summary&gt;
&lt;value&gt;&lt;c&gt;true&lt;/c&gt; if [delete spelling list]; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Property</Kind>
                      <Declaration>public static bool DeleteSpellingList</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets or sets a value indicating whether [editing spelling list].</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;value&gt;&lt;c&gt;true&lt;/c&gt; if [editing spelling list]; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>EditingSpellingList</Name>
                      <FullName>Art2MSpell.Classes.SpellingPropertiesClass.EditingSpellingList</FullName>
                      <DocComment>&lt;summary&gt;
Gets or sets a value indicating whether [editing spelling list].
&lt;/summary&gt;
&lt;value&gt;&lt;c&gt;true&lt;/c&gt; if [editing spelling list]; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Property</Kind>
                      <Declaration>public static bool EditingSpellingList</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets or sets a value indicating whether [first word is Art2MSpell header].</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>FirstWordIsArt2MSpellHeader</Name>
                      <FullName>Art2MSpell.Classes.SpellingPropertiesClass.FirstWordIsArt2MSpellHeader</FullName>
                      <DocComment>&lt;summary&gt;
 Gets or sets a value indicating whether [first word is Art2MSpell header].
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
 Gets or sets a value indicating whether [first word is Art2MSpell header].
</summary>
                      </XmlDocComment>
                      <Kind>Property</Kind>
                      <Declaration>public static bool FirstWordIsArt2MSpellHeader</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>returns the header for all spelling list used in Spell-It program.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;value&gt;</CommentLine>
                      <CommentLine>The get spell it header.</CommentLine>
                      <CommentLine>&lt;/value&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>GetArt2MSpellHeader</Name>
                      <FullName>Art2MSpell.Classes.SpellingPropertiesClass.GetArt2MSpellHeader</FullName>
                      <DocComment>&lt;summary&gt;
    returns the header for all spelling list used in Spell-It program.
&lt;/summary&gt;
&lt;value&gt;
    The get spell it header.
&lt;/value&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Property</Kind>
                      <Declaration>public static string GetArt2MSpellHeader</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.String</TypeFullName>
                      <TypeName>String</TypeName>
                      <TypeAliasedName>string</TypeAliasedName>
                      <ReadWrite>ReadOnly</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets or sets a value indicating whether [opening spelling list].</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;value&gt;&lt;c&gt;true&lt;/c&gt; if [opening spelling list]; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OpeningSpellingList</Name>
                      <FullName>Art2MSpell.Classes.SpellingPropertiesClass.OpeningSpellingList</FullName>
                      <DocComment>&lt;summary&gt;
Gets or sets a value indicating whether [opening spelling list].
&lt;/summary&gt;
&lt;value&gt;&lt;c&gt;true&lt;/c&gt; if [opening spelling list]; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Property</Kind>
                      <Declaration>public static bool OpeningSpellingList</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets or sets a value indicating whether [saving spelling list].</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;value&gt;&lt;c&gt;true&lt;/c&gt; if [saving spelling list]; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SavingSpellingList</Name>
                      <FullName>Art2MSpell.Classes.SpellingPropertiesClass.SavingSpellingList</FullName>
                      <DocComment>&lt;summary&gt;
Gets or sets a value indicating whether [saving spelling list].
&lt;/summary&gt;
&lt;value&gt;&lt;c&gt;true&lt;/c&gt; if [saving spelling list]; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Property</Kind>
                      <Declaration>public static bool SavingSpellingList</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets or sets the index of the selected word.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;value&gt;The index of the selected word.&lt;/value&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SelectedWordIndex</Name>
                      <FullName>Art2MSpell.Classes.SpellingPropertiesClass.SelectedWordIndex</FullName>
                      <DocComment>&lt;summary&gt;
Gets or sets the index of the selected word.
&lt;/summary&gt;
&lt;value&gt;The index of the selected word.&lt;/value&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Property</Kind>
                      <Declaration>public static int SelectedWordIndex</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Int32</TypeFullName>
                      <TypeName>Int32</TypeName>
                      <TypeAliasedName>int</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets or sets a value indicating whether [spelling list is dirty].</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;value&gt;&lt;c&gt;true&lt;/c&gt; if [spelling list is dirty]; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SpellingListIsDirty</Name>
                      <FullName>Art2MSpell.Classes.SpellingPropertiesClass.SpellingListIsDirty</FullName>
                      <DocComment>&lt;summary&gt;
Gets or sets a value indicating whether [spelling list is dirty].
&lt;/summary&gt;
&lt;value&gt;&lt;c&gt;true&lt;/c&gt; if [spelling list is dirty]; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Property</Kind>
                      <Declaration>public static bool SpellingListIsDirty</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets or sets the spelling list path.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;value&gt;The spelling list path.&lt;/value&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SpellingListPath</Name>
                      <FullName>Art2MSpell.Classes.SpellingPropertiesClass.SpellingListPath</FullName>
                      <DocComment>&lt;summary&gt;
Gets or sets the spelling list path.
&lt;/summary&gt;
&lt;value&gt;The spelling list path.&lt;/value&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Property</Kind>
                      <Declaration>public static string SpellingListPath</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.String</TypeFullName>
                      <TypeName>String</TypeName>
                      <TypeAliasedName>string</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets or sets the spelling word text box value.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;value&gt;The spelling word text box value.&lt;/value&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SpellingWordTextBoxValue</Name>
                      <FullName>Art2MSpell.Classes.SpellingPropertiesClass.SpellingWordTextBoxValue</FullName>
                      <DocComment>&lt;summary&gt;
Gets or sets the spelling word text box value.
&lt;/summary&gt;
&lt;value&gt;The spelling word text box value.&lt;/value&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Property</Kind>
                      <Declaration>public static string SpellingWordTextBoxValue</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.String</TypeFullName>
                      <TypeName>String</TypeName>
                      <TypeAliasedName>string</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <SetterAccess>public</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>Validation.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Classes\Validation.cs</FullPath>
          <SubType>Code</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/13/2019 11:37:46 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Classes\Validation.cs</URL>
          <Filesize>7700</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/8/2019 3:15:31 PM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Classes\Validation.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Classes</Name>
              <FullName>Art2MSpell.Classes</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Classes</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Diagnostics.Contracts</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Reflection</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>JetBrains.Annotations</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;</CommentLine>
                  <CommentLine>Validates data.</CommentLine>
                  <CommentLine>&lt;/summary&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>Validation</Name>
                  <FullName>Art2MSpell.Classes.Validation</FullName>
                  <DocComment>&lt;summary&gt;
    Validates data.
&lt;/summary&gt;</DocComment>
                  <XmlDocComment>
                    <summary>
    Validates data.
</summary>
                  </XmlDocComment>
                  <Kind>Class</Kind>
                  <Declaration>public static class Validation</Declaration>
                  <Access>public</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Classes</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Object</Name>
                      <FullName>System.Object</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>The first string in the Spelling list. Means if exists that the Spelling list is a Spell-It list.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>Spelling</Name>
                      <FullName>Art2MSpell.Classes.Validation.Spelling</FullName>
                      <DocComment>&lt;summary&gt;
    The first string in the Spelling list. Means if exists that the Spelling list is a Spell-It list.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    The first string in the Spelling list. Means if exists that the Spelling list is a Spell-It list.
</summary>
                      </XmlDocComment>
                      <Kind>Constant</Kind>
                      <Declaration>private const string Spelling = "Art2mSpell!!";</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.String</TypeFullName>
                      <TypeName>String</TypeName>
                      <TypeAliasedName>string</TypeAliasedName>
                      <InitExpression>"Art2mSpell!!"</InitExpression>
                      <IsConstant>True</IsConstant>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Check spelling word has no white space which could indicate two words only one word is allowed.</CommentLine>
                      <CommentLine>Only letters allowed in the spelling word.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="value"&gt;Word to check spelling.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;true if no empty space and has letters only.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/10/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ValidateSpellingWord</Name>
                      <FullName>Art2MSpell.Classes.Validation.ValidateSpellingWord</FullName>
                      <DocComment>&lt;summary&gt;
    Check spelling word has no white space which could indicate two words only one word is allowed.
    Only letters allowed in the spelling word.
&lt;/summary&gt;
&lt;param name="value"&gt;Word to check spelling.&lt;/param&gt;
&lt;returns&gt;true if no empty space and has letters only.&lt;/returns&gt;
&lt;created&gt;art2m,5/10/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool ValidateSpellingWord([NotNull] string value)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>value</Name>
                          <FullName>Art2MSpell.Classes.Validation.ValidateSpellingWord.value</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string value</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                        <Attributes>
                          <Attribute>
                            <Properties>
                              <Name>NotNull</Name>
                              <FullName>JetBrains.Annotations.NotNullAttribute</FullName>
                              <DocComment />
                              <XmlDocComment />
                              <Kind>Attribute</Kind>
                              <Declaration>NotNull</Declaration>
                              <Access />
                              <Value />
                            </Properties>
                          </Attribute>
                        </Attributes>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Check that there are only letters in the spelling word.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="value"&gt;The spelling word to be checked.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;True if only letters in the spelling word else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/10/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ValidateSpellingWordHasLettersOnly</Name>
                      <FullName>Art2MSpell.Classes.Validation.ValidateSpellingWordHasLettersOnly</FullName>
                      <DocComment>&lt;summary&gt;
    Check that there are only letters in the spelling word.
&lt;/summary&gt;
&lt;param name="value"&gt;The spelling word to be checked.&lt;/param&gt;
&lt;returns&gt;True if only letters in the spelling word else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/10/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool ValidateSpellingWordHasLettersOnly([NotNull] string value)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>value</Name>
                          <FullName>Art2MSpell.Classes.Validation.ValidateSpellingWordHasLettersOnly.value</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string value</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                        <Attributes>
                          <Attribute>
                            <Properties>
                              <Name>NotNull</Name>
                              <FullName>JetBrains.Annotations.NotNullAttribute</FullName>
                              <DocComment />
                              <XmlDocComment />
                              <Kind>Attribute</Kind>
                              <Declaration>NotNull</Declaration>
                              <Access />
                              <Value />
                            </Properties>
                          </Attribute>
                        </Attributes>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Check for space in value this will means either space in word that does not belong or</CommentLine>
                      <CommentLine>two words instead of one spelling word.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="value"&gt;The spelling word to validate.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;True if no space is found else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/10/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ValidateStringOneWord</Name>
                      <FullName>Art2MSpell.Classes.Validation.ValidateStringOneWord</FullName>
                      <DocComment>&lt;summary&gt;
    Check for space in value this will means either space in word that does not belong or
    two words instead of one spelling word.
&lt;/summary&gt;
&lt;param name="value"&gt;The spelling word to validate.&lt;/param&gt;
&lt;returns&gt;True if no space is found else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/10/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool ValidateStringOneWord(string value)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>value</Name>
                          <FullName>Art2MSpell.Classes.Validation.ValidateStringOneWord.value</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string value</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>If empty not valid spelling word</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="value"&gt;The spelling word to be checked.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;True if not empty else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/10/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ValidateStringValueNotEmptyNotWhiteSpace</Name>
                      <FullName>Art2MSpell.Classes.Validation.ValidateStringValueNotEmptyNotWhiteSpace</FullName>
                      <DocComment>&lt;summary&gt;
    If empty not valid spelling word
&lt;/summary&gt;
&lt;param name="value"&gt;The spelling word to be checked.&lt;/param&gt;
&lt;returns&gt;True if not empty else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/10/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool ValidateStringValueNotEmptyNotWhiteSpace([NotNull] string value)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>value</Name>
                          <FullName>Art2MSpell.Classes.Validation.ValidateStringValueNotEmptyNotWhiteSpace.value</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string value</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                        <Attributes>
                          <Attribute>
                            <Properties>
                              <Name>NotNull</Name>
                              <FullName>JetBrains.Annotations.NotNullAttribute</FullName>
                              <DocComment />
                              <XmlDocComment />
                              <Kind>Attribute</Kind>
                              <Declaration>NotNull</Declaration>
                              <Access />
                              <Value />
                            </Properties>
                          </Attribute>
                        </Attributes>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Validates that this is a valid spelling list file.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt; first word in the spelling list file.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;true if valid spelling list file else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/10/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ValidateThisIsArt2MSpellSpellingList</Name>
                      <FullName>Art2MSpell.Classes.Validation.ValidateThisIsArt2MSpellSpellingList</FullName>
                      <DocComment>&lt;summary&gt;
    Validates that this is a valid spelling list file.
&lt;/summary&gt;
&lt;param name="word"&gt; first word in the spelling list file.&lt;/param&gt;
&lt;returns&gt;true if valid spelling list file else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/10/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/10/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool ValidateThisIsArt2MSpellSpellingList([NotNull] string word)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Classes.Validation.ValidateThisIsArt2MSpellSpellingList.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                        <Attributes>
                          <Attribute>
                            <Properties>
                              <Name>NotNull</Name>
                              <FullName>JetBrains.Annotations.NotNullAttribute</FullName>
                              <DocComment />
                              <XmlDocComment />
                              <Kind>Attribute</Kind>
                              <Declaration>NotNull</Declaration>
                              <Access />
                              <Value />
                            </Properties>
                          </Attribute>
                        </Attributes>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>DictionaryWordscollection.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Collections\DictionaryWordscollection.cs</FullPath>
          <SubType>Code</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/13/2019 1:40:00 PM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Collections\DictionaryWordscollection.cs</URL>
          <Filesize>4632</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/8/2019 9:41:17 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Collections\DictionaryWordscollection.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Kind>Using</Kind>
              <Name>System.Collections.Generic</Name>
              <Alias />
            </Properties>
          </CodeElement>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Collections</Name>
              <FullName>Art2MSpell.Collections</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Collections</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;</CommentLine>
                  <CommentLine>Holds suggested words for a misspelled word.</CommentLine>
                  <CommentLine>&lt;/summary&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>DictionaryWordscollection</Name>
                  <FullName>Art2MSpell.Collections.DictionaryWordscollection</FullName>
                  <DocComment>&lt;summary&gt;
Holds suggested words for a misspelled word.
&lt;/summary&gt;</DocComment>
                  <XmlDocComment>
                    <summary>
Holds suggested words for a misspelled word.
</summary>
                  </XmlDocComment>
                  <Kind>Class</Kind>
                  <Declaration>public static class DictionaryWordscollection</Declaration>
                  <Access>public</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Collections</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Object</Name>
                      <FullName>System.Object</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Contains collection of words to possibly become a spelling list.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>WordsList</Name>
                      <FullName>Art2MSpell.Collections.DictionaryWordscollection.WordsList</FullName>
                      <DocComment>&lt;summary&gt;
Contains collection of words to possibly become a spelling list.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Contains collection of words to possibly become a spelling list.
</summary>
                      </XmlDocComment>
                      <Kind>Field</Kind>
                      <Declaration>private static readonly List&lt;string&gt; WordsList = new List&lt;string&gt;();</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Collections.Generic.List&lt;System.String&gt;</TypeFullName>
                      <TypeName>List&lt;System.String&gt;</TypeName>
                      <TypeAliasedName>List&lt;System.String&gt;</TypeAliasedName>
                      <InitExpression>new List&lt;string&gt;()</InitExpression>
                      <IsConstant>False</IsConstant>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Adds the item.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt;Add new word to the collection.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>AddItem</Name>
                      <FullName>Art2MSpell.Collections.DictionaryWordscollection.AddItem</FullName>
                      <DocComment>&lt;summary&gt;
Adds the item.
&lt;/summary&gt;
&lt;param name="word"&gt;Add new word to the collection.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static void AddItem(string word)</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Collections.DictionaryWordscollection.AddItem.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Clears the collection.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ClearCollection</Name>
                      <FullName>Art2MSpell.Collections.DictionaryWordscollection.ClearCollection</FullName>
                      <DocComment>&lt;summary&gt;
Clears the collection.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Clears the collection.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>public static void ClearCollection()</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Determines whether the specified word contains item.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt;Check if the word is contained in the collection.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;&lt;c&gt;true&lt;/c&gt; if the specified word contains item; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ContainsItem</Name>
                      <FullName>Art2MSpell.Collections.DictionaryWordscollection.ContainsItem</FullName>
                      <DocComment>&lt;summary&gt;
Determines whether the specified word contains item.
&lt;/summary&gt;
&lt;param name="word"&gt;Check if the word is contained in the collection.&lt;/param&gt;
&lt;returns&gt;&lt;c&gt;true&lt;/c&gt; if the specified word contains item; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool ContainsItem(string word)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Collections.DictionaryWordscollection.ContainsItem.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets all items.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;All items.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>GetAllItems</Name>
                      <FullName>Art2MSpell.Collections.DictionaryWordscollection.GetAllItems</FullName>
                      <DocComment>&lt;summary&gt;
Gets all items.
&lt;/summary&gt;
&lt;returns&gt;All items.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static string[] GetAllItems()</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.String[]</TypeFullName>
                      <TypeName>String[]</TypeName>
                      <TypeAliasedName>string[]</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets the item at.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="index"&gt;The items index.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;The item.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>GetItemAt</Name>
                      <FullName>Art2MSpell.Collections.DictionaryWordscollection.GetItemAt</FullName>
                      <DocComment>&lt;summary&gt;
Gets the item at.
&lt;/summary&gt;
&lt;param name="index"&gt;The items index.&lt;/param&gt;
&lt;returns&gt;The item.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static string GetItemAt(int index)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.String</TypeFullName>
                      <TypeName>String</TypeName>
                      <TypeAliasedName>string</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>index</Name>
                          <FullName>Art2MSpell.Collections.DictionaryWordscollection.GetItemAt.index</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>int index</Declaration>
                          <Access />
                          <TypeFullName>System.Int32</TypeFullName>
                          <TypeName>Int32</TypeName>
                          <TypeAliasedName>int</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets the index of the item.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt;The word to find index for.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;Return the index of the item.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>GetItemIndex</Name>
                      <FullName>Art2MSpell.Collections.DictionaryWordscollection.GetItemIndex</FullName>
                      <DocComment>&lt;summary&gt;
Gets the index of the item.
&lt;/summary&gt;
&lt;param name="word"&gt;The word to find index for.&lt;/param&gt;
&lt;returns&gt;Return the index of the item.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static int GetItemIndex(string word)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Int32</TypeFullName>
                      <TypeName>Int32</TypeName>
                      <TypeAliasedName>int</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Collections.DictionaryWordscollection.GetItemIndex.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Items the count.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;The items count.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ItemsCount</Name>
                      <FullName>Art2MSpell.Collections.DictionaryWordscollection.ItemsCount</FullName>
                      <DocComment>&lt;summary&gt;
Items the count.
&lt;/summary&gt;
&lt;returns&gt;The items count.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static int ItemsCount()</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Int32</TypeFullName>
                      <TypeName>Int32</TypeName>
                      <TypeAliasedName>int</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Removes the item.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt;The word to be removed.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;true if word removed else false.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>RemoveItem</Name>
                      <FullName>Art2MSpell.Collections.DictionaryWordscollection.RemoveItem</FullName>
                      <DocComment>&lt;summary&gt;
Removes the item.
&lt;/summary&gt;
&lt;param name="word"&gt;The word to be removed.&lt;/param&gt;
&lt;returns&gt;true if word removed else false.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool RemoveItem(string word)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Collections.DictionaryWordscollection.RemoveItem.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Removes the item at.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="index"&gt;The index to be removed.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;true if item is no longer in collection else false.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>RemoveItemAt</Name>
                      <FullName>Art2MSpell.Collections.DictionaryWordscollection.RemoveItemAt</FullName>
                      <DocComment>&lt;summary&gt;
Removes the item at.
&lt;/summary&gt;
&lt;param name="index"&gt;The index to be removed.&lt;/param&gt;
&lt;returns&gt;true if item is no longer in collection else false.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool RemoveItemAt(int index)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>index</Name>
                          <FullName>Art2MSpell.Collections.DictionaryWordscollection.RemoveItemAt.index</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>int index</Declaration>
                          <Access />
                          <TypeFullName>System.Int32</TypeFullName>
                          <TypeName>Int32</TypeName>
                          <TypeAliasedName>int</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sorts the collection.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SortCollection</Name>
                      <FullName>Art2MSpell.Collections.DictionaryWordscollection.SortCollection</FullName>
                      <DocComment>&lt;summary&gt;
Sorts the collection.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Sorts the collection.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>public static void SortCollection()</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>SpellingWordsCollection.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Collections\SpellingWordsCollection.cs</FullPath>
          <SubType>Code</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/13/2019 1:40:06 PM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Collections\SpellingWordsCollection.cs</URL>
          <Filesize>4685</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Collections\SpellingWordsCollection.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Kind>Using</Kind>
              <Name>System.Collections.Generic</Name>
              <Alias />
            </Properties>
          </CodeElement>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Collections</Name>
              <FullName>Art2MSpell.Collections</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Collections</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;</CommentLine>
                  <CommentLine>Spelling Words Collection Holds words from current spelling list.</CommentLine>
                  <CommentLine>&lt;/summary&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>SpellingWordsCollection</Name>
                  <FullName>Art2MSpell.Collections.SpellingWordsCollection</FullName>
                  <DocComment>&lt;summary&gt;
Spelling Words Collection Holds words from current spelling list.
&lt;/summary&gt;</DocComment>
                  <XmlDocComment>
                    <summary>
Spelling Words Collection Holds words from current spelling list.
</summary>
                  </XmlDocComment>
                  <Kind>Class</Kind>
                  <Declaration>public static class SpellingWordsCollection</Declaration>
                  <Access>public</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Collections</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Object</Name>
                      <FullName>System.Object</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Contains collection of words from a spelling list.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>WordsList</Name>
                      <FullName>Art2MSpell.Collections.SpellingWordsCollection.WordsList</FullName>
                      <DocComment>&lt;summary&gt;
Contains collection of words from a spelling list.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Contains collection of words from a spelling list.
</summary>
                      </XmlDocComment>
                      <Kind>Field</Kind>
                      <Declaration>private static readonly List&lt;string&gt; WordsList = new List&lt;string&gt;();</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Collections.Generic.List&lt;System.String&gt;</TypeFullName>
                      <TypeName>List&lt;System.String&gt;</TypeName>
                      <TypeAliasedName>List&lt;System.String&gt;</TypeAliasedName>
                      <InitExpression>new List&lt;string&gt;()</InitExpression>
                      <IsConstant>False</IsConstant>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Adds the item.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt;Add new word to the collection.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>AddItem</Name>
                      <FullName>Art2MSpell.Collections.SpellingWordsCollection.AddItem</FullName>
                      <DocComment>&lt;summary&gt;
Adds the item.
&lt;/summary&gt;
&lt;param name="word"&gt;Add new word to the collection.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static void AddItem(string word)</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Collections.SpellingWordsCollection.AddItem.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Clears the collection.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ClearCollection</Name>
                      <FullName>Art2MSpell.Collections.SpellingWordsCollection.ClearCollection</FullName>
                      <DocComment>&lt;summary&gt;
Clears the collection.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Clears the collection.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>public static void ClearCollection()</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Determines whether the specified word contains item.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt;Check if the word is contained in the collection.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;&lt;c&gt;true&lt;/c&gt; if the specified word contains item; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ContainsItem</Name>
                      <FullName>Art2MSpell.Collections.SpellingWordsCollection.ContainsItem</FullName>
                      <DocComment>&lt;summary&gt;
Determines whether the specified word contains item.
&lt;/summary&gt;
&lt;param name="word"&gt;Check if the word is contained in the collection.&lt;/param&gt;
&lt;returns&gt;&lt;c&gt;true&lt;/c&gt; if the specified word contains item; otherwise, &lt;c&gt;false&lt;/c&gt;.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool ContainsItem(string word)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Collections.SpellingWordsCollection.ContainsItem.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets all items.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;All items.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>GetAllItems</Name>
                      <FullName>Art2MSpell.Collections.SpellingWordsCollection.GetAllItems</FullName>
                      <DocComment>&lt;summary&gt;
Gets all items.
&lt;/summary&gt;
&lt;returns&gt;All items.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static string[] GetAllItems()</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.String[]</TypeFullName>
                      <TypeName>String[]</TypeName>
                      <TypeAliasedName>string[]</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets the item at.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="index"&gt;The items index.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;The item.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>GetItemAt</Name>
                      <FullName>Art2MSpell.Collections.SpellingWordsCollection.GetItemAt</FullName>
                      <DocComment>&lt;summary&gt;
Gets the item at.
&lt;/summary&gt;
&lt;param name="index"&gt;The items index.&lt;/param&gt;
&lt;returns&gt;The item.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static string GetItemAt(int index)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.String</TypeFullName>
                      <TypeName>String</TypeName>
                      <TypeAliasedName>string</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>index</Name>
                          <FullName>Art2MSpell.Collections.SpellingWordsCollection.GetItemAt.index</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>int index</Declaration>
                          <Access />
                          <TypeFullName>System.Int32</TypeFullName>
                          <TypeName>Int32</TypeName>
                          <TypeAliasedName>int</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Gets the index of the item.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt;The word to find index for.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;Return the index of the item.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>GetItemIndex</Name>
                      <FullName>Art2MSpell.Collections.SpellingWordsCollection.GetItemIndex</FullName>
                      <DocComment>&lt;summary&gt;
Gets the index of the item.
&lt;/summary&gt;
&lt;param name="word"&gt;The word to find index for.&lt;/param&gt;
&lt;returns&gt;Return the index of the item.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static int GetItemIndex(string word)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Int32</TypeFullName>
                      <TypeName>Int32</TypeName>
                      <TypeAliasedName>int</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Collections.SpellingWordsCollection.GetItemIndex.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Items the count.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;The items count.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ItemsCount</Name>
                      <FullName>Art2MSpell.Collections.SpellingWordsCollection.ItemsCount</FullName>
                      <DocComment>&lt;summary&gt;
Items the count.
&lt;/summary&gt;
&lt;returns&gt;The items count.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static int ItemsCount()</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Int32</TypeFullName>
                      <TypeName>Int32</TypeName>
                      <TypeAliasedName>int</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Removes the item.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt;The word to be removed.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;true if word removed else false.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>RemoveItem</Name>
                      <FullName>Art2MSpell.Collections.SpellingWordsCollection.RemoveItem</FullName>
                      <DocComment>&lt;summary&gt;
Removes the item.
&lt;/summary&gt;
&lt;param name="word"&gt;The word to be removed.&lt;/param&gt;
&lt;returns&gt;true if word removed else false.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool RemoveItem(string word)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Collections.SpellingWordsCollection.RemoveItem.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Removes the item at.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="index"&gt;The index to be removed.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;true if item is no longer in collection else false.&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>RemoveItemAt</Name>
                      <FullName>Art2MSpell.Collections.SpellingWordsCollection.RemoveItemAt</FullName>
                      <DocComment>&lt;summary&gt;
Removes the item at.
&lt;/summary&gt;
&lt;param name="index"&gt;The index to be removed.&lt;/param&gt;
&lt;returns&gt;true if item is no longer in collection else false.&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>public static bool RemoveItemAt(int index)</Declaration>
                      <Access>public</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>index</Name>
                          <FullName>Art2MSpell.Collections.SpellingWordsCollection.RemoveItemAt.index</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>int index</Declaration>
                          <Access />
                          <TypeFullName>System.Int32</TypeFullName>
                          <TypeName>Int32</TypeName>
                          <TypeAliasedName>int</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sorts the collection.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SortCollection</Name>
                      <FullName>Art2MSpell.Collections.SpellingWordsCollection.SortCollection</FullName>
                      <DocComment>&lt;summary&gt;
Sorts the collection.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Sorts the collection.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>public static void SortCollection()</Declaration>
                      <Access>public</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>AssemblyInfo.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Properties\AssemblyInfo.cs</FullPath>
          <SubType>Code</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/8/2019 3:51:48 PM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Properties\AssemblyInfo.cs</URL>
          <Filesize>1340</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Properties\AssemblyInfo.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Kind>Using</Kind>
              <Name>System.Reflection</Name>
              <Alias />
            </Properties>
          </CodeElement>
          <CodeElement>
            <Properties>
              <Kind>Using</Kind>
              <Name>System.Runtime.InteropServices</Name>
              <Alias />
            </Properties>
          </CodeElement>
          <CodeElement />
          <CodeElement />
          <CodeElement />
          <CodeElement />
          <CodeElement />
          <CodeElement />
          <CodeElement />
          <CodeElement />
          <CodeElement />
          <CodeElement />
          <CodeElement />
          <CodeElement />
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>Resources.resx</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Properties\Resources.resx</FullPath>
          <SubType>Text</SubType>
          <Extension>.resx</Extension>
          <CustomToolOutput>Resources.Designer.cs</CustomToolOutput>
          <DateModified>8/25/2018 9:24:00 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>EmbeddedResource</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>EmbeddedResource</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool>ResXFileCodeGenerator</CustomTool>
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Properties\Resources.resx</URL>
          <Filesize>5612</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Properties\Resources.resx</LocalPath>
          <ModifiedBy />
        </Properties>
      </File>
      <File>
        <Properties>
          <FileName>Resources.Designer.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Properties\Resources.Designer.cs</FullPath>
          <SubType>Code</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/8/2019 4:01:18 PM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>True</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Properties\Resources.Designer.cs</URL>
          <Filesize>2832</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>True</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Properties\Resources.Designer.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Properties</Name>
              <FullName>Art2MSpell.Properties</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Properties</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;</CommentLine>
                  <CommentLine>A strongly-typed resource class, for looking up localized strings, etc.</CommentLine>
                  <CommentLine>&lt;/summary&gt;</CommentLine>
                  <CommentLine>This class was auto-generated by the StronglyTypedResourceBuilder</CommentLine>
                  <CommentLine>class via a tool like ResGen or Visual Studio.</CommentLine>
                  <CommentLine>To add or remove a member, edit your .ResX file then rerun ResGen</CommentLine>
                  <CommentLine>with the /str option, or rebuild your VS project.</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>Resources</Name>
                  <FullName>Art2MSpell.Properties.Resources</FullName>
                  <DocComment>&lt;summary&gt;
  A strongly-typed resource class, for looking up localized strings, etc.
&lt;/summary&gt;</DocComment>
                  <XmlDocComment>
                    <summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
                  </XmlDocComment>
                  <Kind>Class</Kind>
                  <Declaration>internal class Resources</Declaration>
                  <Access>internal</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Properties</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Attributes>
                  <Attribute>
                    <Properties>
                      <Name>GeneratedCodeAttribute</Name>
                      <FullName>System.CodeDom.Compiler.GeneratedCodeAttribute</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Attribute</Kind>
                      <Declaration>global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")</Declaration>
                      <Access />
                      <Value>"System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0"</Value>
                    </Properties>
                  </Attribute>
                  <Attribute>
                    <Properties>
                      <Name>DebuggerNonUserCodeAttribute</Name>
                      <FullName>System.Diagnostics.DebuggerNonUserCodeAttribute</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Attribute</Kind>
                      <Declaration>global::System.Diagnostics.DebuggerNonUserCodeAttribute()</Declaration>
                      <Access />
                      <Value />
                    </Properties>
                  </Attribute>
                  <Attribute>
                    <Properties>
                      <Name>CompilerGeneratedAttribute</Name>
                      <FullName>System.Runtime.CompilerServices.CompilerGeneratedAttribute</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Attribute</Kind>
                      <Declaration>global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()</Declaration>
                      <Access />
                      <Value />
                    </Properties>
                  </Attribute>
                </Attributes>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Object</Name>
                      <FullName>System.Object</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>resourceMan</Name>
                      <FullName>Art2MSpell.Properties.Resources.resourceMan</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private static global::System.Resources.ResourceManager resourceMan;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Resources.ResourceManager</TypeFullName>
                      <TypeName>ResourceManager</TypeName>
                      <TypeAliasedName>ResourceManager</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>resourceCulture</Name>
                      <FullName>Art2MSpell.Properties.Resources.resourceCulture</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private static global::System.Globalization.CultureInfo resourceCulture;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Globalization.CultureInfo</TypeFullName>
                      <TypeName>CultureInfo</TypeName>
                      <TypeAliasedName>CultureInfo</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>Resources</Name>
                      <FullName>Art2MSpell.Properties.Resources.Resources</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>internal Resources()</Declaration>
                      <Access>internal</Access>
                      <MethodKind>Constructor</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Attributes>
                      <Attribute>
                        <Properties>
                          <Name>SuppressMessageAttribute</Name>
                          <FullName>System.Diagnostics.CodeAnalysis.SuppressMessageAttribute</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Attribute</Kind>
                          <Declaration>global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")</Declaration>
                          <Access />
                          <Value>"Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode"</Value>
                        </Properties>
                      </Attribute>
                    </Attributes>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Returns the cached ResourceManager instance used by this class.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ResourceManager</Name>
                      <FullName>Art2MSpell.Properties.Resources.ResourceManager</FullName>
                      <DocComment>&lt;summary&gt;
  Returns the cached ResourceManager instance used by this class.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
                      </XmlDocComment>
                      <Kind>Property</Kind>
                      <Declaration>internal static global::System.Resources.ResourceManager ResourceManager</Declaration>
                      <Access>internal</Access>
                      <TypeFullName>System.Resources.ResourceManager</TypeFullName>
                      <TypeName>ResourceManager</TypeName>
                      <TypeAliasedName>ResourceManager</TypeAliasedName>
                      <GetterAccess>internal</GetterAccess>
                      <ReadWrite>ReadOnly</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Attributes>
                      <Attribute>
                        <Properties>
                          <Name>EditorBrowsableAttribute</Name>
                          <FullName>System.ComponentModel.EditorBrowsableAttribute</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Attribute</Kind>
                          <Declaration>global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)</Declaration>
                          <Access />
                          <Value>global::System.ComponentModel.EditorBrowsableState.Advanced</Value>
                        </Properties>
                      </Attribute>
                    </Attributes>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Overrides the current thread's CurrentUICulture property for all</CommentLine>
                      <CommentLine>resource lookups using this strongly typed resource class.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>Culture</Name>
                      <FullName>Art2MSpell.Properties.Resources.Culture</FullName>
                      <DocComment>&lt;summary&gt;
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
                      </XmlDocComment>
                      <Kind>Property</Kind>
                      <Declaration>internal static global::System.Globalization.CultureInfo Culture</Declaration>
                      <Access>internal</Access>
                      <TypeFullName>System.Globalization.CultureInfo</TypeFullName>
                      <TypeName>CultureInfo</TypeName>
                      <TypeAliasedName>CultureInfo</TypeAliasedName>
                      <GetterAccess>internal</GetterAccess>
                      <SetterAccess>internal</SetterAccess>
                      <ReadWrite>ReadWrite</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Attributes>
                      <Attribute>
                        <Properties>
                          <Name>EditorBrowsableAttribute</Name>
                          <FullName>System.ComponentModel.EditorBrowsableAttribute</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Attribute</Kind>
                          <Declaration>global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)</Declaration>
                          <Access />
                          <Value>global::System.ComponentModel.EditorBrowsableState.Advanced</Value>
                        </Properties>
                      </Attribute>
                    </Attributes>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>Settings.settings</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Properties\Settings.settings</FullPath>
          <SubType>Text</SubType>
          <Extension>.settings</Extension>
          <CustomToolOutput>Settings.Designer.cs</CustomToolOutput>
          <DateModified>8/25/2018 9:24:00 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>None</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>None</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool>SettingsSingleFileGenerator</CustomTool>
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Properties\Settings.settings</URL>
          <Filesize>249</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Properties\Settings.settings</LocalPath>
          <ModifiedBy />
        </Properties>
      </File>
      <File>
        <Properties>
          <FileName>Settings.Designer.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Properties\Settings.Designer.cs</FullPath>
          <SubType>Code</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/8/2019 3:18:46 PM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>True</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>True</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Properties\Settings.Designer.cs</URL>
          <Filesize>1097</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>True</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Properties\Settings.Designer.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Properties</Name>
              <FullName>Art2MSpell.Properties</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Properties</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <CommentLines />
                <Properties>
                  <Name>Settings</Name>
                  <FullName>Art2MSpell.Properties.Settings</FullName>
                  <DocComment />
                  <XmlDocComment />
                  <Kind>Class</Kind>
                  <Declaration>internal sealed partial class Settings</Declaration>
                  <Access>internal</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Properties</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Attributes>
                  <Attribute>
                    <Properties>
                      <Name>CompilerGeneratedAttribute</Name>
                      <FullName>System.Runtime.CompilerServices.CompilerGeneratedAttribute</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Attribute</Kind>
                      <Declaration>global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()</Declaration>
                      <Access />
                      <Value />
                    </Properties>
                  </Attribute>
                  <Attribute>
                    <Properties>
                      <Name>GeneratedCodeAttribute</Name>
                      <FullName>System.CodeDom.Compiler.GeneratedCodeAttribute</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Attribute</Kind>
                      <Declaration>global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")</Declaration>
                      <Access />
                      <Value>"Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0"</Value>
                    </Properties>
                  </Attribute>
                </Attributes>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>ApplicationSettingsBase</Name>
                      <FullName>System.Configuration.ApplicationSettingsBase</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>defaultInstance</Name>
                      <FullName>Art2MSpell.Properties.Settings.defaultInstance</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));</Declaration>
                      <Access>private</Access>
                      <TypeFullName>Art2MSpell.Properties.Settings</TypeFullName>
                      <TypeName>Settings</TypeName>
                      <TypeAliasedName>Settings</TypeAliasedName>
                      <InitExpression>((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())))</InitExpression>
                      <IsConstant>False</IsConstant>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>Default</Name>
                      <FullName>Art2MSpell.Properties.Settings.Default</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Property</Kind>
                      <Declaration>public static Settings Default</Declaration>
                      <Access>public</Access>
                      <TypeFullName>Art2MSpell.Properties.Settings</TypeFullName>
                      <TypeName>Settings</TypeName>
                      <TypeAliasedName>Settings</TypeAliasedName>
                      <GetterAccess>public</GetterAccess>
                      <ReadWrite>ReadOnly</ReadWrite>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>PracticeSpellingWordsForm.BackgroundColor.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\PracticeSpellingWordsForm.BackgroundColor.cs</FullPath>
          <SubType>Designer</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/13/2019 10:53:36 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\PracticeSpellingWordsForm.BackgroundColor.cs</URL>
          <Filesize>3636</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/9/2019 11:10:32 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\PracticeSpellingWordsForm.BackgroundColor.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <Designer>
          <Properties>
            <Name>PracticeSpellingWordsForm</Name>
            <Type>System.Windows.Forms.Form</Type>
            <AcceptButton />
            <AccessibleDescription />
            <AccessibleName />
            <AccessibleRole>Default</AccessibleRole>
            <AllowDrop>False</AllowDrop>
            <AutoScaleMode>Inherit</AutoScaleMode>
            <AutoScroll>False</AutoScroll>
            <AutoScrollMargin>{Width=0, Height=0}</AutoScrollMargin>
            <AutoScrollMinSize>{Width=0, Height=0}</AutoScrollMinSize>
            <AutoSize>False</AutoSize>
            <AutoSizeMode>GrowOnly</AutoSizeMode>
            <AutoValidate>EnablePreventFocusChange</AutoValidate>
            <BackColor>Color [Control]</BackColor>
            <BackgroundImage />
            <BackgroundImageLayout>Tile</BackgroundImageLayout>
            <CancelButton />
            <CausesValidation>True</CausesValidation>
            <ContextMenuStrip />
            <ControlBox>True</ControlBox>
            <Cursor>[Cursor: Default]</Cursor>
            <DoubleBuffered>False</DoubleBuffered>
            <Enabled>True</Enabled>
            <Font>[Font: Name=Microsoft Sans Serif, Size=8.25, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
            <ForeColor>Color [ControlText]</ForeColor>
            <FormBorderStyle>Sizable</FormBorderStyle>
            <HelpButton>False</HelpButton>
            <ImeMode>NoControl</ImeMode>
            <IsMdiContainer>False</IsMdiContainer>
            <KeyPreview>False</KeyPreview>
            <Language />
            <Localizable>False</Localizable>
            <Location>{X=0,Y=0}</Location>
            <Locked>False</Locked>
            <MainMenuStrip />
            <MaximizeBox>True</MaximizeBox>
            <MaximumSize>{Width=0, Height=0}</MaximumSize>
            <MinimizeBox>True</MinimizeBox>
            <MinimumSize>{Width=0, Height=0}</MinimumSize>
            <Opacity>1</Opacity>
            <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
            <RightToLeft>No</RightToLeft>
            <RightToLeftLayout>False</RightToLeftLayout>
            <ShowIcon>True</ShowIcon>
            <ShowInTaskbar>True</ShowInTaskbar>
            <Size>{Width=300, Height=300}</Size>
            <SizeGripStyle>Auto</SizeGripStyle>
            <StartPosition>WindowsDefaultLocation</StartPosition>
            <Tag />
            <Text />
            <TopMost>False</TopMost>
            <TransparencyKey>Color [Empty]</TransparencyKey>
            <UseWaitCursor>False</UseWaitCursor>
            <WindowState>Normal</WindowState>
          </Properties>
          <Components />
        </Designer>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Source</Name>
              <FullName>Art2MSpell.Source</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Source</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Drawing</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;</CommentLine>
                  <CommentLine>Sets the background color for the close button based on button state.</CommentLine>
                  <CommentLine>&lt;/summary&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>PracticeSpellingWordsForm</Name>
                  <FullName>Art2MSpell.Source.PracticeSpellingWordsForm</FullName>
                  <DocComment />
                  <XmlDocComment />
                  <Kind>Class</Kind>
                  <Declaration>public partial class PracticeSpellingWordsForm</Declaration>
                  <Access>public</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Source</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Form</Name>
                      <FullName>System.Windows.Forms.Form</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the background color for the close button based on button state.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetCloseButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetCloseButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the background color for the close button based on button state.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the background color for the close button based on button state.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetCloseButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the color of the next word button background.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetNextWordButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetNextWordButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the color of the next word button background.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the color of the next word button background.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetNextWordButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the color of the open spelling list button background.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetOpenSpellingListButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetOpenSpellingListButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the color of the open spelling list button background.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the color of the open spelling list button background.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetOpenSpellingListButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the color of the pause button background.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetPauseButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetPauseButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the color of the pause button background.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the color of the pause button background.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetPauseButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the color of the quit button background.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetQuitButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetQuitButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the color of the quit button background.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the color of the quit button background.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetQuitButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the color of the repeat word button background.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetRepeatWordButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetRepeatWordButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the color of the repeat word button background.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the color of the repeat word button background.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetRepeatWordButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the color of the score group box background.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetScoreGroupBox_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetScoreGroupBox_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the color of the score group box background.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the color of the score group box background.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetScoreGroupBox_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the color of the spelling words group box.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetSpellingWordsGroupBox_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetSpellingWordsGroupBox_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the color of the spelling words group box.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the color of the spelling words group box.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetSpellingWordsGroupBox_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the start color of the button background.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetStartButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetStartButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the start color of the button background.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the start color of the button background.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetStartButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>PracticeSpellingWordsForm.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\PracticeSpellingWordsForm.cs</FullPath>
          <SubType>Designer</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/14/2019 9:00:28 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\PracticeSpellingWordsForm.cs</URL>
          <Filesize>14180</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\PracticeSpellingWordsForm.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <Designer>
          <Properties>
            <Name>PracticeSpellingWordsForm</Name>
            <Type>System.Windows.Forms.Form</Type>
            <AcceptButton />
            <AccessibleDescription />
            <AccessibleName />
            <AccessibleRole>Default</AccessibleRole>
            <AllowDrop>False</AllowDrop>
            <AutoScaleMode>Font</AutoScaleMode>
            <AutoScroll>False</AutoScroll>
            <AutoScrollMargin>{Width=0, Height=0}</AutoScrollMargin>
            <AutoScrollMinSize>{Width=0, Height=0}</AutoScrollMinSize>
            <AutoSize>False</AutoSize>
            <AutoSizeMode>GrowOnly</AutoSizeMode>
            <AutoValidate>EnablePreventFocusChange</AutoValidate>
            <BackColor>Color [Control]</BackColor>
            <BackgroundImage />
            <BackgroundImageLayout>Tile</BackgroundImageLayout>
            <CancelButton />
            <CausesValidation>True</CausesValidation>
            <ContextMenuStrip />
            <ControlBox>True</ControlBox>
            <Cursor>[Cursor: Default]</Cursor>
            <DoubleBuffered>False</DoubleBuffered>
            <Enabled>True</Enabled>
            <Font>[Font: Name=Microsoft Sans Serif, Size=8.25, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
            <ForeColor>Color [ControlText]</ForeColor>
            <FormBorderStyle>Fixed3D</FormBorderStyle>
            <HelpButton>False</HelpButton>
            <ImeMode>NoControl</ImeMode>
            <IsMdiContainer>False</IsMdiContainer>
            <KeyPreview>False</KeyPreview>
            <Language />
            <Localizable>False</Localizable>
            <Location>{X=0,Y=0}</Location>
            <Locked>False</Locked>
            <MainMenuStrip>SpelListDisplayMenuStrip [System.Windows.Forms.MenuStrip], Name: SpelListDisplayMenuStrip, Items: 2</MainMenuStrip>
            <MaximizeBox>False</MaximizeBox>
            <MaximumSize>{Width=800, Height=600}</MaximumSize>
            <MinimizeBox>True</MinimizeBox>
            <MinimumSize>{Width=800, Height=600}</MinimumSize>
            <Opacity>1</Opacity>
            <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
            <RightToLeft>No</RightToLeft>
            <RightToLeftLayout>False</RightToLeftLayout>
            <ShowIcon>True</ShowIcon>
            <ShowInTaskbar>True</ShowInTaskbar>
            <Size>{Width=800, Height=600}</Size>
            <SizeGripStyle>Auto</SizeGripStyle>
            <StartPosition>CenterScreen</StartPosition>
            <Tag />
            <Text>Practice Spelling words Form</Text>
            <TopMost>False</TopMost>
            <TransparencyKey>Color [Empty]</TransparencyKey>
            <UseWaitCursor>False</UseWaitCursor>
            <WindowState>Normal</WindowState>
          </Properties>
          <Components>
            <Component>
              <Properties>
                <Name>grpbxScore</Name>
                <Type>System.Windows.Forms.GroupBox</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <Anchor>Top, Left</Anchor>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=8.25, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <ImeMode>NoControl</ImeMode>
                <Location>{X=51,Y=31}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=3,Top=3,Right=3,Bottom=3}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=604, Height=124}</Size>
                <TabIndex>12</TabIndex>
                <Tag />
                <Text />
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>txtTotalWords</Name>
                <Type>System.Windows.Forms.TextBox</Type>
                <AcceptsReturn>False</AcceptsReturn>
                <AcceptsTab>False</AcceptsTab>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoCompleteCustomSource>System.Windows.Forms.AutoCompleteStringCollection</AutoCompleteCustomSource>
                <AutoCompleteMode>None</AutoCompleteMode>
                <AutoCompleteSource>None</AutoCompleteSource>
                <BackColor>Color [Control]</BackColor>
                <BorderStyle>Fixed3D</BorderStyle>
                <CausesValidation>True</CausesValidation>
                <CharacterCasing>Normal</CharacterCasing>
                <ContextMenuStrip />
                <Cursor>[Cursor: IBeam]</Cursor>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [WindowText]</ForeColor>
                <HideSelection>True</HideSelection>
                <ImeMode>NoControl</ImeMode>
                <Lines>System.String[]</Lines>
                <Location>{X=485,Y=51}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MaxLength>32767</MaxLength>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Multiline>True</Multiline>
                <ReadOnly>True</ReadOnly>
                <RightToLeft>No</RightToLeft>
                <ScrollBars>None</ScrollBars>
                <ShortcutsEnabled>True</ShortcutsEnabled>
                <Size>{Width=100, Height=23}</Size>
                <TabIndex>8</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text />
                <TextAlign>Left</TextAlign>
                <UseSystemPasswordChar>False</UseSystemPasswordChar>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
                <WordWrap>True</WordWrap>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>lblTotalWords</Name>
                <Type>System.Windows.Forms.Label</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <BackColor>Color [Control]</BackColor>
                <BorderStyle>None</BorderStyle>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <LiveSetting />
                <Location>{X=485,Y=16}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=0,Right=3,Bottom=0}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=100, Height=23}</Size>
                <TabIndex>7</TabIndex>
                <Tag />
                <Text>Total Words</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>txtWordsWrong</Name>
                <Type>System.Windows.Forms.TextBox</Type>
                <AcceptsReturn>False</AcceptsReturn>
                <AcceptsTab>False</AcceptsTab>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoCompleteCustomSource>System.Windows.Forms.AutoCompleteStringCollection</AutoCompleteCustomSource>
                <AutoCompleteMode>None</AutoCompleteMode>
                <AutoCompleteSource>None</AutoCompleteSource>
                <BackColor>Color [Control]</BackColor>
                <BorderStyle>Fixed3D</BorderStyle>
                <CausesValidation>True</CausesValidation>
                <CharacterCasing>Normal</CharacterCasing>
                <ContextMenuStrip />
                <Cursor>[Cursor: IBeam]</Cursor>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [WindowText]</ForeColor>
                <HideSelection>True</HideSelection>
                <ImeMode>NoControl</ImeMode>
                <Lines>System.String[]</Lines>
                <Location>{X=134,Y=51}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MaxLength>32767</MaxLength>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Multiline>True</Multiline>
                <ReadOnly>True</ReadOnly>
                <RightToLeft>No</RightToLeft>
                <ScrollBars>None</ScrollBars>
                <ShortcutsEnabled>True</ShortcutsEnabled>
                <Size>{Width=100, Height=23}</Size>
                <TabIndex>6</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text />
                <TextAlign>Left</TextAlign>
                <UseSystemPasswordChar>False</UseSystemPasswordChar>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
                <WordWrap>True</WordWrap>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>lblWordsWrong</Name>
                <Type>System.Windows.Forms.Label</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <BackColor>Color [Control]</BackColor>
                <BorderStyle>None</BorderStyle>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <LiveSetting />
                <Location>{X=134,Y=16}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=0,Right=3,Bottom=0}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=100, Height=23}</Size>
                <TabIndex>5</TabIndex>
                <Tag />
                <Text>Words Wrong</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>txtWordsCorrect</Name>
                <Type>System.Windows.Forms.TextBox</Type>
                <AcceptsReturn>False</AcceptsReturn>
                <AcceptsTab>False</AcceptsTab>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoCompleteCustomSource>System.Windows.Forms.AutoCompleteStringCollection</AutoCompleteCustomSource>
                <AutoCompleteMode>None</AutoCompleteMode>
                <AutoCompleteSource>None</AutoCompleteSource>
                <BackColor>Color [Control]</BackColor>
                <BorderStyle>Fixed3D</BorderStyle>
                <CausesValidation>True</CausesValidation>
                <CharacterCasing>Normal</CharacterCasing>
                <ContextMenuStrip />
                <Cursor>[Cursor: IBeam]</Cursor>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [WindowText]</ForeColor>
                <HideSelection>True</HideSelection>
                <ImeMode>NoControl</ImeMode>
                <Lines>System.String[]</Lines>
                <Location>{X=17,Y=51}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MaxLength>32767</MaxLength>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Multiline>True</Multiline>
                <ReadOnly>True</ReadOnly>
                <RightToLeft>No</RightToLeft>
                <ScrollBars>None</ScrollBars>
                <ShortcutsEnabled>True</ShortcutsEnabled>
                <Size>{Width=100, Height=23}</Size>
                <TabIndex>4</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text />
                <TextAlign>Left</TextAlign>
                <UseSystemPasswordChar>False</UseSystemPasswordChar>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
                <WordWrap>True</WordWrap>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>lblWordsCorrect</Name>
                <Type>System.Windows.Forms.Label</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <BackColor>Color [Control]</BackColor>
                <BorderStyle>None</BorderStyle>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <LiveSetting />
                <Location>{X=17,Y=16}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=0,Right=3,Bottom=0}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=100, Height=23}</Size>
                <TabIndex>3</TabIndex>
                <Tag />
                <Text>Words Correct</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>txtWordsCount</Name>
                <Type>System.Windows.Forms.TextBox</Type>
                <AcceptsReturn>False</AcceptsReturn>
                <AcceptsTab>False</AcceptsTab>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoCompleteCustomSource>System.Windows.Forms.AutoCompleteStringCollection</AutoCompleteCustomSource>
                <AutoCompleteMode>None</AutoCompleteMode>
                <AutoCompleteSource>None</AutoCompleteSource>
                <BackColor>Color [Control]</BackColor>
                <BorderStyle>Fixed3D</BorderStyle>
                <CausesValidation>True</CausesValidation>
                <CharacterCasing>Normal</CharacterCasing>
                <ContextMenuStrip />
                <Cursor>[Cursor: IBeam]</Cursor>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [WindowText]</ForeColor>
                <HideSelection>True</HideSelection>
                <ImeMode>NoControl</ImeMode>
                <Lines>System.String[]</Lines>
                <Location>{X=364,Y=51}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MaxLength>32767</MaxLength>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Multiline>True</Multiline>
                <ReadOnly>True</ReadOnly>
                <RightToLeft>No</RightToLeft>
                <ScrollBars>None</ScrollBars>
                <ShortcutsEnabled>True</ShortcutsEnabled>
                <Size>{Width=100, Height=23}</Size>
                <TabIndex>2</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text />
                <TextAlign>Left</TextAlign>
                <UseSystemPasswordChar>False</UseSystemPasswordChar>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
                <WordWrap>True</WordWrap>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>lblWordsCount</Name>
                <Type>System.Windows.Forms.Label</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <BackColor>Color [Control]</BackColor>
                <BorderStyle>None</BorderStyle>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <LiveSetting />
                <Location>{X=364,Y=16}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=0,Right=3,Bottom=0}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=100, Height=23}</Size>
                <TabIndex>1</TabIndex>
                <Tag />
                <Text>Words Count</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnOpenList</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Right</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=10, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=289,Y=176}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=140, Height=42}</Size>
                <TabIndex>11</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Open Spelling List</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>grpbxSpellingWords</Name>
                <Type>System.Windows.Forms.GroupBox</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <Anchor>Top, Left</Anchor>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=8.25, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <ImeMode>NoControl</ImeMode>
                <Location>{X=51,Y=246}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=3,Top=3,Right=3,Bottom=3}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=604, Height=126}</Size>
                <TabIndex>10</TabIndex>
                <Tag />
                <Text>Spelling Word.</Text>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnRepeatWord</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=10, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=251,Y=63}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=100, Height=32}</Size>
                <TabIndex>3</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Repeat Word</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnQuit</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=10, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=495,Y=63}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=100, Height=32}</Size>
                <TabIndex>5</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Quit</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnStart</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=10, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=7,Y=63}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=100, Height=32}</Size>
                <TabIndex>1</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Start</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnPause</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=10, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=373,Y=63}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=100, Height=32}</Size>
                <TabIndex>4</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Pause</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnNextWord</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=10, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=129,Y=63}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=100, Height=32}</Size>
                <TabIndex>2</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Next Word</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>txtSpellWord</Name>
                <Type>System.Windows.Forms.TextBox</Type>
                <AcceptsReturn>False</AcceptsReturn>
                <AcceptsTab>False</AcceptsTab>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoCompleteCustomSource>System.Windows.Forms.AutoCompleteStringCollection</AutoCompleteCustomSource>
                <AutoCompleteMode>None</AutoCompleteMode>
                <AutoCompleteSource>None</AutoCompleteSource>
                <BackColor>Color [Window]</BackColor>
                <BorderStyle>Fixed3D</BorderStyle>
                <CausesValidation>True</CausesValidation>
                <CharacterCasing>Normal</CharacterCasing>
                <ContextMenuStrip />
                <Cursor>[Cursor: IBeam]</Cursor>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <Font>[Font: Name=Microsoft Sans Serif, Size=12, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [WindowText]</ForeColor>
                <HideSelection>True</HideSelection>
                <ImeMode>NoControl</ImeMode>
                <Lines>System.String[]</Lines>
                <Location>{X=7,Y=18}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MaxLength>32767</MaxLength>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Multiline>True</Multiline>
                <ReadOnly>False</ReadOnly>
                <RightToLeft>No</RightToLeft>
                <ScrollBars>None</ScrollBars>
                <ShortcutsEnabled>True</ShortcutsEnabled>
                <Size>{Width=589, Height=34}</Size>
                <TabIndex>0</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text />
                <TextAlign>Left</TextAlign>
                <UseSystemPasswordChar>False</UseSystemPasswordChar>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
                <WordWrap>True</WordWrap>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnClose</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Bottom, Right</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=10, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=660,Y=513}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=108, Height=32}</Size>
                <TabIndex>9</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Close</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>SpelListDisplayMenuStrip</Name>
                <Type>System.Windows.Forms.MenuStrip</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <AllowItemReorder>False</AllowItemReorder>
                <AllowMerge>True</AllowMerge>
                <Anchor>Top, Left</Anchor>
                <AutoSize>True</AutoSize>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <ContextMenuStrip />
                <Dock>Top</Dock>
                <Enabled>True</Enabled>
                <Font>[Font: Name=Segoe UI, Size=9, Units=3, GdiCharSet=1, GdiVerticalFont=False]</Font>
                <GripMargin>{Left=2,Top=2,Right=0,Bottom=2}</GripMargin>
                <GripStyle>Hidden</GripStyle>
                <ImageScalingSize>{Width=16, Height=16}</ImageScalingSize>
                <ImeMode>NoControl</ImeMode>
                <Items>System.Windows.Forms.ToolStripItemCollection</Items>
                <LayoutStyle>HorizontalStackWithOverflow</LayoutStyle>
                <Location>{X=0,Y=0}</Location>
                <Locked>False</Locked>
                <Margin>{Left=0,Top=0,Right=0,Bottom=0}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MdiWindowListItem />
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=6,Top=2,Right=0,Bottom=2}</Padding>
                <RenderMode>ManagerRenderMode</RenderMode>
                <RightToLeft>No</RightToLeft>
                <ShowItemToolTips>False</ShowItemToolTips>
                <Size>{Width=780, Height=24}</Size>
                <Stretch>True</Stretch>
                <TabIndex>0</TabIndex>
                <TabStop>False</TabStop>
                <Tag />
                <Text>SpelListDisplay</Text>
                <TextDirection>Horizontal</TextDirection>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>ToollTip</Name>
                <Type>System.Windows.Forms.ToolTip</Type>
                <Active>True</Active>
                <AutomaticDelay>500</AutomaticDelay>
                <AutoPopDelay>5000</AutoPopDelay>
                <BackColor>Color [Info]</BackColor>
                <ForeColor>Color [InfoText]</ForeColor>
                <InitialDelay>500</InitialDelay>
                <IsBalloon>False</IsBalloon>
                <OwnerDraw>False</OwnerDraw>
                <ReshowDelay>100</ReshowDelay>
                <ShowAlways>False</ShowAlways>
                <StripAmpersands>False</StripAmpersands>
                <Tag />
                <ToolTipIcon>None</ToolTipIcon>
                <ToolTipTitle />
                <UseAnimation>True</UseAnimation>
                <UseFading>True</UseFading>
              </Properties>
            </Component>
          </Components>
        </Designer>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Source</Name>
              <FullName>Art2MSpell.Source</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Source</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Drawing</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Speech.Synthesis</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Text</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Windows.Forms</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>Classes</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>Collections</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;Displays form for creating and editing spelling lists.&lt;/summary&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>PracticeSpellingWordsForm</Name>
                  <FullName>Art2MSpell.Source.PracticeSpellingWordsForm</FullName>
                  <DocComment>&lt;summary&gt;Displays form for creating and editing spelling lists.&lt;/summary&gt;</DocComment>
                  <XmlDocComment>
                    <summary>Displays form for creating and editing spelling lists.</summary>
                  </XmlDocComment>
                  <Kind>Class</Kind>
                  <Declaration>public partial class PracticeSpellingWordsForm</Declaration>
                  <Access>public</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Source</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Form</Name>
                      <FullName>System.Windows.Forms.Form</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>array of list box words.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>allWords</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.allWords</FullName>
                      <DocComment>&lt;summary&gt;
array of list box words.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
array of list box words.
</summary>
                      </XmlDocComment>
                      <Kind>Field</Kind>
                      <Declaration>private string[] allWords;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.String[]</TypeFullName>
                      <TypeName>String[]</TypeName>
                      <TypeAliasedName>string[]</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>The number of words spelled correctly.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>correct</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.correct</FullName>
                      <DocComment>&lt;summary&gt;
    The number of words spelled correctly.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    The number of words spelled correctly.
</summary>
                      </XmlDocComment>
                      <Kind>Field</Kind>
                      <Declaration>private int correct;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Int32</TypeFullName>
                      <TypeName>Int32</TypeName>
                      <TypeAliasedName>int</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Current index of the spelling words collection.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>index</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.index</FullName>
                      <DocComment>&lt;summary&gt;
    Current index of the spelling words collection.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Current index of the spelling words collection.
</summary>
                      </XmlDocComment>
                      <Kind>Field</Kind>
                      <Declaration>private int index;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Int32</TypeFullName>
                      <TypeName>Int32</TypeName>
                      <TypeAliasedName>int</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>The paused</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>paused</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.paused</FullName>
                      <DocComment>&lt;summary&gt;
    The paused
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    The paused
</summary>
                      </XmlDocComment>
                      <Kind>Field</Kind>
                      <Declaration>private bool paused;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>The number of words spelled incorrectly.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>wrong</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.wrong</FullName>
                      <DocComment>&lt;summary&gt;
    The number of words spelled incorrectly.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    The number of words spelled incorrectly.
</summary>
                      </XmlDocComment>
                      <Kind>Field</Kind>
                      <Declaration>private int wrong;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Int32</TypeFullName>
                      <TypeName>Int32</TypeName>
                      <TypeAliasedName>int</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;Holds the initial with of the form.&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>formWidth</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.formWidth</FullName>
                      <DocComment>&lt;summary&gt;Holds the initial with of the form.&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>Holds the initial with of the form.</summary>
                      </XmlDocComment>
                      <Kind>Field</Kind>
                      <Declaration>private int formWidth;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Int32</TypeFullName>
                      <TypeName>Int32</TypeName>
                      <TypeAliasedName>int</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>grpbxScoreLeft</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.grpbxScoreLeft</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private int grpbxScoreLeft;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Int32</TypeFullName>
                      <TypeName>Int32</TypeName>
                      <TypeAliasedName>int</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>grpbxSpellLeft</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.grpbxSpellLeft</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private int grpbxSpellLeft;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Int32</TypeFullName>
                      <TypeName>Int32</TypeName>
                      <TypeAliasedName>int</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;Initializes a new instance of the &lt;see cref="PracticeSpellingWordsForm" /&gt; class.&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>PracticeSpellingWordsForm</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.PracticeSpellingWordsForm</FullName>
                      <DocComment>&lt;summary&gt;Initializes a new instance of the &lt;see cref="PracticeSpellingWordsForm" /&gt; class.&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>Initializes a new instance of the <see cref="PracticeSpellingWordsForm" /> class.</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>public PracticeSpellingWordsForm()</Declaration>
                      <Access>public</Access>
                      <MethodKind>Constructor</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the color of the buttons background.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ChangeControls_BackgroundColors</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.ChangeControls_BackgroundColors</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the color of the buttons background.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the color of the buttons background.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void ChangeControls_BackgroundColors()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Checks the word spelling.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>CheckWordSpelling</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.CheckWordSpelling</FullName>
                      <DocComment>&lt;summary&gt;
    Checks the word spelling.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Checks the word spelling.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void CheckWordSpelling()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;Gets the spelling words from spelling list.&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;True if spelling list files is read into the collection else false,&lt;/returns&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>GetSpellingWordsFromSpellingList</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.GetSpellingWordsFromSpellingList</FullName>
                      <DocComment>&lt;summary&gt;Gets the spelling words from spelling list.&lt;/summary&gt;
&lt;returns&gt;True if spelling list files is read into the collection else false,&lt;/returns&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private static bool GetSpellingWordsFromSpellingList()</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Get spelling words from file.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/13/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/13/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>GetWordsFromFile</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.GetWordsFromFile</FullName>
                      <DocComment>&lt;summary&gt;
    Get spelling words from file.
&lt;/summary&gt;
&lt;returns&gt;&lt;/returns&gt;
&lt;created&gt;art2m,5/13/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/13/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private bool GetWordsFromFile()</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the CloseButton control.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnCloseButtonClick</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnCloseButtonClick</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the CloseButton control.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnCloseButtonClick(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnCloseButtonClick.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnCloseButtonClick.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the CloseMenuItem control.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnCloseMenuItemClick</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnCloseMenuItemClick</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the CloseMenuItem control.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnCloseMenuItemClick(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnCloseMenuItemClick.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnCloseMenuItemClick.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the Next Word Button control.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnNextWordButtonClick</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnNextWordButtonClick</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the Next Word Button control.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnNextWordButtonClick(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnNextWordButtonClick.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnNextWordButtonClick.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the OpenSpellingListButton control.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnOpenSpellingListButtonClick</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnOpenSpellingListButtonClick</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the OpenSpellingListButton control.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnOpenSpellingListButtonClick(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnOpenSpellingListButtonClick.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnOpenSpellingListButtonClick.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the OpenSpellingListMenuItem control.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnOpenSpellingListMenuItemClick</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnOpenSpellingListMenuItemClick</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the OpenSpellingListMenuItem control.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnOpenSpellingListMenuItemClick(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnOpenSpellingListMenuItemClick.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnOpenSpellingListMenuItemClick.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the PauseButton control.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnPauseButtonClick</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnPauseButtonClick</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the PauseButton control.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnPauseButtonClick(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnPauseButtonClick.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnPauseButtonClick.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the QuitButton control.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnQuitButtonClick</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnQuitButtonClick</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the QuitButton control.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnQuitButtonClick(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnQuitButtonClick.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnQuitButtonClick.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the Repeat Word Button control.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnRepeatWordButtonClick</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnRepeatWordButtonClick</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the Repeat Word Button control.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnRepeatWordButtonClick(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnRepeatWordButtonClick.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnRepeatWordButtonClick.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the StartButton control.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnStartButtonClick</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnStartButtonClick</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the StartButton control.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnStartButtonClick(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnStartButtonClick.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.OnStartButtonClick.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Says the spelling word.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt;The word to be asked for spelling.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SaySpellingWord</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SaySpellingWord</FullName>
                      <DocComment>&lt;summary&gt;
    Says the spelling word.
&lt;/summary&gt;
&lt;param name="word"&gt;The word to be asked for spelling.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private static void SaySpellingWord(string word)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SaySpellingWord.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the Buttons when form is loading.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetControlsEnabledState_FormLoadEvent</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetControlsEnabledState_FormLoadEvent</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the Buttons when form is loading.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the state of the Buttons when form is loading.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetControlsEnabledState_FormLoadEvent()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Shows the number of words spelled correctly and the number spelled incorrectly.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ShowWordsScore</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.ShowWordsScore</FullName>
                      <DocComment>&lt;summary&gt;
    Shows the number of words spelled correctly and the number spelled incorrectly.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Shows the number of words spelled correctly and the number spelled incorrectly.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void ShowWordsScore()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Set Initial controls.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/13/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/13/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>PracticeSpellingWordsForm_Load</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.PracticeSpellingWordsForm_Load</FullName>
                      <DocComment>&lt;summary&gt;
Set Initial controls.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;
&lt;created&gt;art2m,5/13/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/13/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void PracticeSpellingWordsForm_Load(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.PracticeSpellingWordsForm_Load.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.PracticeSpellingWordsForm_Load.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>PracticeSpellingWordsForm_Resize</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.PracticeSpellingWordsForm_Resize</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void PracticeSpellingWordsForm_Resize(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.PracticeSpellingWordsForm_Resize.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.PracticeSpellingWordsForm_Resize.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>PracticeSpellingWordsForm.Designer.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\PracticeSpellingWordsForm.Designer.cs</FullPath>
          <SubType>Code</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/14/2019 6:48:20 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\PracticeSpellingWordsForm.Designer.cs</URL>
          <Filesize>20865</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>True</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\PracticeSpellingWordsForm.Designer.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Source</Name>
              <FullName>Art2MSpell.Source</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Source</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;</CommentLine>
                  <CommentLine>Required designer variable.</CommentLine>
                  <CommentLine>&lt;/summary&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>PracticeSpellingWordsForm</Name>
                  <FullName>Art2MSpell.Source.PracticeSpellingWordsForm</FullName>
                  <DocComment />
                  <XmlDocComment />
                  <Kind>Class</Kind>
                  <Declaration>partial class PracticeSpellingWordsForm</Declaration>
                  <Access>internal</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Source</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Form</Name>
                      <FullName>System.Windows.Forms.Form</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Required designer variable.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>components</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.components</FullName>
                      <DocComment>&lt;summary&gt;
Required designer variable.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Required designer variable.
</summary>
                      </XmlDocComment>
                      <Kind>Field</Kind>
                      <Declaration>private System.ComponentModel.IContainer components = null;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.ComponentModel.IContainer</TypeFullName>
                      <TypeName>IContainer</TypeName>
                      <TypeAliasedName>IContainer</TypeAliasedName>
                      <InitExpression>null</InitExpression>
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Clean up any resources being used.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="disposing"&gt;true if managed resources should be disposed; otherwise, false.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>Dispose</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.Dispose</FullName>
                      <DocComment>&lt;summary&gt;
Clean up any resources being used.
&lt;/summary&gt;
&lt;param name="disposing"&gt;true if managed resources should be disposed; otherwise, false.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>protected override void Dispose(bool disposing)</Declaration>
                      <Access>protected</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>True</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>True</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>disposing</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.Dispose.disposing</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool disposing</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Required method for Designer support - do not modify</CommentLine>
                      <CommentLine>the contents of this method with the code editor.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>InitializeComponent</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.InitializeComponent</FullName>
                      <DocComment>&lt;summary&gt;
Required method for Designer support - do not modify
the contents of this method with the code editor.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Required method for Designer support - do not modify
the contents of this method with the code editor.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void InitializeComponent()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>SpelListDisplayMenuStrip</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SpelListDisplayMenuStrip</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.MenuStrip SpelListDisplayMenuStrip;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.MenuStrip</TypeFullName>
                      <TypeName>MenuStrip</TypeName>
                      <TypeAliasedName>MenuStrip</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>FileMenuItem</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.FileMenuItem</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolStripMenuItem FileMenuItem;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolStripMenuItem</TypeFullName>
                      <TypeName>ToolStripMenuItem</TypeName>
                      <TypeAliasedName>ToolStripMenuItem</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>mnuClose</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.mnuClose</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolStripMenuItem mnuClose;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolStripMenuItem</TypeFullName>
                      <TypeName>ToolStripMenuItem</TypeName>
                      <TypeAliasedName>ToolStripMenuItem</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>ToollTip</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.ToollTip</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolTip ToollTip;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolTip</TypeFullName>
                      <TypeName>ToolTip</TypeName>
                      <TypeAliasedName>ToolTip</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>mnuOpenSpellingList</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.mnuOpenSpellingList</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolStripMenuItem mnuOpenSpellingList;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolStripMenuItem</TypeFullName>
                      <TypeName>ToolStripMenuItem</TypeName>
                      <TypeAliasedName>ToolStripMenuItem</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>toolStripSeparator1</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.toolStripSeparator1</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolStripSeparator toolStripSeparator1;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolStripSeparator</TypeFullName>
                      <TypeName>ToolStripSeparator</TypeName>
                      <TypeAliasedName>ToolStripSeparator</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>grpbxScore</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.grpbxScore</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.GroupBox grpbxScore;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.GroupBox</TypeFullName>
                      <TypeName>GroupBox</TypeName>
                      <TypeAliasedName>GroupBox</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>txtTotalWords</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.txtTotalWords</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.TextBox txtTotalWords;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.TextBox</TypeFullName>
                      <TypeName>TextBox</TypeName>
                      <TypeAliasedName>TextBox</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>lblTotalWords</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.lblTotalWords</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Label lblTotalWords;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Label</TypeFullName>
                      <TypeName>Label</TypeName>
                      <TypeAliasedName>Label</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>txtWordsWrong</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.txtWordsWrong</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.TextBox txtWordsWrong;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.TextBox</TypeFullName>
                      <TypeName>TextBox</TypeName>
                      <TypeAliasedName>TextBox</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>lblWordsWrong</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.lblWordsWrong</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Label lblWordsWrong;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Label</TypeFullName>
                      <TypeName>Label</TypeName>
                      <TypeAliasedName>Label</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>txtWordsCorrect</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.txtWordsCorrect</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.TextBox txtWordsCorrect;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.TextBox</TypeFullName>
                      <TypeName>TextBox</TypeName>
                      <TypeAliasedName>TextBox</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>lblWordsCorrect</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.lblWordsCorrect</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Label lblWordsCorrect;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Label</TypeFullName>
                      <TypeName>Label</TypeName>
                      <TypeAliasedName>Label</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>txtWordsCount</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.txtWordsCount</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.TextBox txtWordsCount;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.TextBox</TypeFullName>
                      <TypeName>TextBox</TypeName>
                      <TypeAliasedName>TextBox</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>lblWordsCount</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.lblWordsCount</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Label lblWordsCount;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Label</TypeFullName>
                      <TypeName>Label</TypeName>
                      <TypeAliasedName>Label</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnOpenList</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.btnOpenList</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnOpenList;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>grpbxSpellingWords</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.grpbxSpellingWords</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.GroupBox grpbxSpellingWords;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.GroupBox</TypeFullName>
                      <TypeName>GroupBox</TypeName>
                      <TypeAliasedName>GroupBox</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnRepeatWord</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.btnRepeatWord</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnRepeatWord;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnQuit</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.btnQuit</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnQuit;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnStart</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.btnStart</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnStart;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnPause</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.btnPause</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnPause;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnNextWord</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.btnNextWord</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnNextWord;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>txtSpellWord</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.txtSpellWord</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.TextBox txtSpellWord;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.TextBox</TypeFullName>
                      <TypeName>TextBox</TypeName>
                      <TypeAliasedName>TextBox</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnClose</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.btnClose</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnClose;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>PracticeSpellingWordsForm.resx</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\PracticeSpellingWordsForm.resx</FullPath>
          <SubType>Text</SubType>
          <Extension>.resx</Extension>
          <CustomToolOutput />
          <DateModified>5/14/2019 6:48:20 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>EmbeddedResource</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>EmbeddedResource</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\PracticeSpellingWordsForm.resx</URL>
          <Filesize>6226</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>True</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\PracticeSpellingWordsForm.resx</LocalPath>
          <ModifiedBy />
        </Properties>
      </File>
      <File>
        <Properties>
          <FileName>PracticeSpellingWordsForm.SetButtonState.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\PracticeSpellingWordsForm.SetButtonState.cs</FullPath>
          <SubType>Designer</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/13/2019 3:26:36 PM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\PracticeSpellingWordsForm.SetButtonState.cs</URL>
          <Filesize>9500</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/9/2019 11:19:06 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\PracticeSpellingWordsForm.SetButtonState.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <Designer>
          <Properties>
            <Name>PracticeSpellingWordsForm</Name>
            <Type>System.Windows.Forms.Form</Type>
            <AcceptButton />
            <AccessibleDescription />
            <AccessibleName />
            <AccessibleRole>Default</AccessibleRole>
            <AllowDrop>False</AllowDrop>
            <AutoScaleMode>Inherit</AutoScaleMode>
            <AutoScroll>False</AutoScroll>
            <AutoScrollMargin>{Width=0, Height=0}</AutoScrollMargin>
            <AutoScrollMinSize>{Width=0, Height=0}</AutoScrollMinSize>
            <AutoSize>False</AutoSize>
            <AutoSizeMode>GrowOnly</AutoSizeMode>
            <AutoValidate>EnablePreventFocusChange</AutoValidate>
            <BackColor>Color [Control]</BackColor>
            <BackgroundImage />
            <BackgroundImageLayout>Tile</BackgroundImageLayout>
            <CancelButton />
            <CausesValidation>True</CausesValidation>
            <ContextMenuStrip />
            <ControlBox>True</ControlBox>
            <Cursor>[Cursor: Default]</Cursor>
            <DoubleBuffered>False</DoubleBuffered>
            <Enabled>True</Enabled>
            <Font>[Font: Name=Microsoft Sans Serif, Size=8.25, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
            <ForeColor>Color [ControlText]</ForeColor>
            <FormBorderStyle>Sizable</FormBorderStyle>
            <HelpButton>False</HelpButton>
            <ImeMode>NoControl</ImeMode>
            <IsMdiContainer>False</IsMdiContainer>
            <KeyPreview>False</KeyPreview>
            <Language />
            <Localizable>False</Localizable>
            <Location>{X=0,Y=0}</Location>
            <Locked>False</Locked>
            <MainMenuStrip />
            <MaximizeBox>True</MaximizeBox>
            <MaximumSize>{Width=0, Height=0}</MaximumSize>
            <MinimizeBox>True</MinimizeBox>
            <MinimumSize>{Width=0, Height=0}</MinimumSize>
            <Opacity>1</Opacity>
            <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
            <RightToLeft>No</RightToLeft>
            <RightToLeftLayout>False</RightToLeftLayout>
            <ShowIcon>True</ShowIcon>
            <ShowInTaskbar>True</ShowInTaskbar>
            <Size>{Width=300, Height=300}</Size>
            <SizeGripStyle>Auto</SizeGripStyle>
            <StartPosition>WindowsDefaultLocation</StartPosition>
            <Tag />
            <Text />
            <TopMost>False</TopMost>
            <TransparencyKey>Color [Empty]</TransparencyKey>
            <UseWaitCursor>False</UseWaitCursor>
            <WindowState>Normal</WindowState>
          </Properties>
          <Components />
        </Designer>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Source</Name>
              <FullName>Art2MSpell.Source</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Source</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;Contains button state methods.&lt;/summary&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>PracticeSpellingWordsForm</Name>
                  <FullName>Art2MSpell.Source.PracticeSpellingWordsForm</FullName>
                  <DocComment>&lt;summary&gt;Contains button state methods.&lt;/summary&gt;</DocComment>
                  <XmlDocComment>
                    <summary>Contains button state methods.</summary>
                  </XmlDocComment>
                  <Kind>Class</Kind>
                  <Declaration>public partial class PracticeSpellingWordsForm</Declaration>
                  <Access>public</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Source</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Form</Name>
                      <FullName>System.Windows.Forms.Form</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the close button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetCloseButtonState</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetCloseButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the close button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetCloseButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetCloseButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the next word button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetNextWordButtonState</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetNextWordButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the next word button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetNextWordButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetNextWordButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the open spelling list button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetOpenSpellingListButtonState</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetOpenSpellingListButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the open spelling list button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetOpenSpellingListButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetOpenSpellingListButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the open spelling list menu item.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetOpenSpellingListMenuItemState</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetOpenSpellingListMenuItemState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the open spelling list menu item.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetOpenSpellingListMenuItemState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetOpenSpellingListMenuItemState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the pause button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetPauseButtonState</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetPauseButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the pause button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetPauseButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetPauseButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the quit button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetQuitButtonState</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetQuitButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the quit button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetQuitButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetQuitButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the repeat word button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetRepeatWordButtonState</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetRepeatWordButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the repeat word button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetRepeatWordButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetRepeatWordButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the score group box.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetScoreGroupBoxState</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetScoreGroupBoxState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the score group box.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetScoreGroupBoxState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetScoreGroupBoxState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the spelling word group box.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetSpellingWordGroupBoxState</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetSpellingWordGroupBoxState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the spelling word group box.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetSpellingWordGroupBoxState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetSpellingWordGroupBoxState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the start state of the button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetStartButtonState</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetStartButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the start state of the button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetStartButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetStartButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the button enabled state open spelling list button clicked.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonEnabledState_OpenSpellingListButtonClicked</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetButtonEnabledState_OpenSpellingListButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the button enabled state open spelling list button clicked.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the button enabled state open spelling list button clicked.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonEnabledState_OpenSpellingListButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the button enabled state start button clicked.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonEnabledState_StartButtonClicked</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetButtonEnabledState_StartButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the button enabled state start button clicked.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the button enabled state start button clicked.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonEnabledState_StartButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the buttons enabled state next word button clicked.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonsEnabledState_NextWordButtonClicked</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetButtonsEnabledState_NextWordButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the buttons enabled state next word button clicked.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the buttons enabled state next word button clicked.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonsEnabledState_NextWordButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the buttons enabled state pause button clicked.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonsEnabledState_PauseButtonClicked</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetButtonsEnabledState_PauseButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the buttons enabled state pause button clicked.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the buttons enabled state pause button clicked.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonsEnabledState_PauseButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the buttons enabled state quit button clicked.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonsEnabledState_QuitButtonClicked</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetButtonsEnabledState_QuitButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the buttons enabled state quit button clicked.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the buttons enabled state quit button clicked.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonsEnabledState_QuitButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the menu enabled state open spelling menu item clicked.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetMenuEnabledState_OpenSpellingMenuItemClicked</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetMenuEnabledState_OpenSpellingMenuItemClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the menu enabled state open spelling menu item clicked.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the menu enabled state open spelling menu item clicked.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetMenuEnabledState_OpenSpellingMenuItemClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the paused.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetPausedState</Name>
                      <FullName>Art2MSpell.Source.PracticeSpellingWordsForm.SetPausedState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the paused.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the state of the paused.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetPausedState()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>SpellingWordsListForm.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellingWordsListForm.cs</FullPath>
          <SubType>Designer</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/15/2019 7:21:50 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellingWordsListForm.cs</URL>
          <Filesize>25806</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellingWordsListForm.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <Designer>
          <Properties>
            <Name>SpellingWordsListForm</Name>
            <Type>System.Windows.Forms.Form</Type>
            <AcceptButton />
            <AccessibleDescription />
            <AccessibleName />
            <AccessibleRole>Default</AccessibleRole>
            <AllowDrop>False</AllowDrop>
            <AutoScaleMode>Font</AutoScaleMode>
            <AutoScroll>False</AutoScroll>
            <AutoScrollMargin>{Width=0, Height=0}</AutoScrollMargin>
            <AutoScrollMinSize>{Width=0, Height=0}</AutoScrollMinSize>
            <AutoSize>False</AutoSize>
            <AutoSizeMode>GrowOnly</AutoSizeMode>
            <AutoValidate>EnablePreventFocusChange</AutoValidate>
            <BackColor>Color [Control]</BackColor>
            <BackgroundImage />
            <BackgroundImageLayout>Tile</BackgroundImageLayout>
            <CancelButton />
            <CausesValidation>True</CausesValidation>
            <ContextMenuStrip />
            <ControlBox>True</ControlBox>
            <Cursor>[Cursor: Default]</Cursor>
            <DoubleBuffered>False</DoubleBuffered>
            <Enabled>True</Enabled>
            <Font>[Font: Name=Microsoft Sans Serif, Size=8.25, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
            <ForeColor>Color [ControlText]</ForeColor>
            <FormBorderStyle>Sizable</FormBorderStyle>
            <HelpButton>False</HelpButton>
            <ImeMode>NoControl</ImeMode>
            <IsMdiContainer>False</IsMdiContainer>
            <KeyPreview>False</KeyPreview>
            <Language />
            <Localizable>False</Localizable>
            <Location>{X=0,Y=0}</Location>
            <Locked>False</Locked>
            <MainMenuStrip>MnuNewSpellListMenuStrip [System.Windows.Forms.MenuStrip], Name: MnuNewSpellListMenuStrip, Items: 2</MainMenuStrip>
            <MaximizeBox>True</MaximizeBox>
            <MaximumSize>{Width=0, Height=0}</MaximumSize>
            <MinimizeBox>True</MinimizeBox>
            <MinimumSize>{Width=800, Height=600}</MinimumSize>
            <Opacity>1</Opacity>
            <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
            <RightToLeft>No</RightToLeft>
            <RightToLeftLayout>False</RightToLeftLayout>
            <ShowIcon>True</ShowIcon>
            <ShowInTaskbar>True</ShowInTaskbar>
            <Size>{Width=800, Height=723}</Size>
            <SizeGripStyle>Auto</SizeGripStyle>
            <StartPosition>CenterScreen</StartPosition>
            <Tag />
            <Text>Create a New Spelling List or Modify Existing Spelling List.</Text>
            <TopMost>False</TopMost>
            <TransparencyKey>Color [Empty]</TransparencyKey>
            <UseWaitCursor>False</UseWaitCursor>
            <WindowState>Normal</WindowState>
          </Properties>
          <Components>
            <Component>
              <Properties>
                <Name>flpLeftPanel</Name>
                <Type>System.Windows.Forms.FlowLayoutPanel</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Bottom, Left</Anchor>
                <AutoScroll>False</AutoScroll>
                <AutoScrollMargin>{Width=0, Height=0}</AutoScrollMargin>
                <AutoScrollMinSize>{Width=0, Height=0}</AutoScrollMinSize>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <BorderStyle>None</BorderStyle>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlowDirection>LeftToRight</FlowDirection>
                <Font>[Font: Name=Microsoft Sans Serif, Size=8.25, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <ImeMode>NoControl</ImeMode>
                <Location>{X=33,Y=45}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=180, Height=458}</Size>
                <TabIndex>59</TabIndex>
                <TabStop>False</TabStop>
                <Tag />
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
                <WrapContents>True</WrapContents>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnCreateNewList</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=4,Y=30}</Location>
                <Locked>False</Locked>
                <Margin>{Left=4,Top=30,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=172, Height=32}</Size>
                <TabIndex>37</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Create New Spelling List</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnOpenist</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=4,Y=105}</Location>
                <Locked>False</Locked>
                <Margin>{Left=4,Top=40,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=172, Height=32}</Size>
                <TabIndex>39</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Open Spelling List</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnClearist</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=4,Y=180}</Location>
                <Locked>False</Locked>
                <Margin>{Left=4,Top=40,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=172, Height=32}</Size>
                <TabIndex>39</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Clear Spelling List</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnDeleteList</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=4,Y=255}</Location>
                <Locked>False</Locked>
                <Margin>{Left=4,Top=40,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=172, Height=32}</Size>
                <TabIndex>40</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Delete Spelling List</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnSaveList</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=4,Y=330}</Location>
                <Locked>False</Locked>
                <Margin>{Left=4,Top=40,Right=0,Bottom=0}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=172, Height=32}</Size>
                <TabIndex>41</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Save Spelling List</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>lstWords</Name>
                <Type>System.Windows.Forms.ListBox</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Bottom, Right</Anchor>
                <BackColor>Color [Window]</BackColor>
                <BorderStyle>Fixed3D</BorderStyle>
                <CausesValidation>True</CausesValidation>
                <ColumnWidth>0</ColumnWidth>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DataSource />
                <DisplayMember />
                <Dock>None</Dock>
                <DrawMode>Normal</DrawMode>
                <Enabled>True</Enabled>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [WindowText]</ForeColor>
                <FormattingEnabled>True</FormattingEnabled>
                <HorizontalExtent>0</HorizontalExtent>
                <HorizontalScrollbar>False</HorizontalScrollbar>
                <ImeMode>NoControl</ImeMode>
                <IntegralHeight>True</IntegralHeight>
                <ItemHeight>16</ItemHeight>
                <Items>System.Windows.Forms.ListBox+ObjectCollection</Items>
                <Location>{X=219,Y=13}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <MultiColumn>False</MultiColumn>
                <RightToLeft>No</RightToLeft>
                <ScrollAlwaysVisible>False</ScrollAlwaysVisible>
                <SelectionMode>One</SelectionMode>
                <Size>{Width=388, Height=516}</Size>
                <Sorted>False</Sorted>
                <TabIndex>58</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <UseTabStops>True</UseTabStops>
                <UseWaitCursor>False</UseWaitCursor>
                <ValueMember />
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>flpBottomPanel</Name>
                <Type>System.Windows.Forms.FlowLayoutPanel</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Bottom, Right</Anchor>
                <AutoScroll>False</AutoScroll>
                <AutoScrollMargin>{Width=0, Height=0}</AutoScrollMargin>
                <AutoScrollMinSize>{Width=0, Height=0}</AutoScrollMinSize>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <BorderStyle>None</BorderStyle>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlowDirection>LeftToRight</FlowDirection>
                <Font>[Font: Name=Microsoft Sans Serif, Size=8.25, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <ImeMode>NoControl</ImeMode>
                <Location>{X=29,Y=588}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=5,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=646, Height=44}</Size>
                <TabIndex>60</TabIndex>
                <TabStop>False</TabStop>
                <Tag />
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
                <WrapContents>True</WrapContents>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnAddNewWord</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=8,Y=3}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=122, Height=32}</Size>
                <TabIndex>1</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Add New Word</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnEditWord</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=136,Y=3}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=122, Height=32}</Size>
                <TabIndex>2</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Edit Word</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnDeleteWord</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=264,Y=3}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=122, Height=32}</Size>
                <TabIndex>3</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Delete Word</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnCancelOperation</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=392,Y=3}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=122, Height=32}</Size>
                <TabIndex>4</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Cancel Operation</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnAddWordToList</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=520,Y=3}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=122, Height=32}</Size>
                <TabIndex>5</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Add Word To List</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>cboWord</Name>
                <Type>System.Windows.Forms.ComboBox</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Bottom, Left</Anchor>
                <AutoCompleteCustomSource>System.Windows.Forms.AutoCompleteStringCollection</AutoCompleteCustomSource>
                <AutoCompleteMode>None</AutoCompleteMode>
                <AutoCompleteSource>None</AutoCompleteSource>
                <BackColor>Color [Window]</BackColor>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DataSource />
                <DisplayMember />
                <Dock>None</Dock>
                <DrawMode>Normal</DrawMode>
                <DropDownHeight>106</DropDownHeight>
                <DropDownStyle>DropDown</DropDownStyle>
                <DropDownWidth>391</DropDownWidth>
                <Enabled>True</Enabled>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=12, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [WindowText]</ForeColor>
                <FormattingEnabled>True</FormattingEnabled>
                <ImeMode>NoControl</ImeMode>
                <IntegralHeight>True</IntegralHeight>
                <ItemHeight>20</ItemHeight>
                <Items>System.Windows.Forms.ComboBox+ObjectCollection</Items>
                <Location>{X=219,Y=544}</Location>
                <Locked>False</Locked>
                <Margin>{Left=185,Top=15,Right=3,Bottom=3}</Margin>
                <MaxDropDownItems>8</MaxDropDownItems>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MaxLength>400</MaxLength>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=391, Height=28}</Size>
                <Sorted>False</Sorted>
                <TabIndex>57</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text />
                <UseWaitCursor>False</UseWaitCursor>
                <ValueMember />
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnClose</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Bottom, Right</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=682,Y=640}</Location>
                <Locked>False</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=90, Height=32}</Size>
                <TabIndex>45</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Close</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>MnuNewSpellListMenuStrip</Name>
                <Type>System.Windows.Forms.MenuStrip</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <AllowItemReorder>False</AllowItemReorder>
                <AllowMerge>True</AllowMerge>
                <Anchor>Top, Left</Anchor>
                <AutoSize>True</AutoSize>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <ContextMenuStrip />
                <Dock>Top</Dock>
                <Enabled>True</Enabled>
                <Font>[Font: Name=Segoe UI, Size=9, Units=3, GdiCharSet=1, GdiVerticalFont=False]</Font>
                <GripMargin>{Left=2,Top=2,Right=0,Bottom=2}</GripMargin>
                <GripStyle>Hidden</GripStyle>
                <ImageScalingSize>{Width=16, Height=16}</ImageScalingSize>
                <ImeMode>NoControl</ImeMode>
                <Items>System.Windows.Forms.ToolStripItemCollection</Items>
                <LayoutStyle>HorizontalStackWithOverflow</LayoutStyle>
                <Location>{X=0,Y=0}</Location>
                <Locked>False</Locked>
                <Margin>{Left=0,Top=0,Right=0,Bottom=0}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MdiWindowListItem />
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=6,Top=2,Right=0,Bottom=2}</Padding>
                <RenderMode>ManagerRenderMode</RenderMode>
                <RightToLeft>No</RightToLeft>
                <ShowItemToolTips>False</ShowItemToolTips>
                <Size>{Width=784, Height=24}</Size>
                <Stretch>True</Stretch>
                <TabIndex>0</TabIndex>
                <TabStop>False</TabStop>
                <Tag />
                <Text>mnuNewSpellList</Text>
                <TextDirection>Horizontal</TextDirection>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>spelListToolTip</Name>
                <Type>System.Windows.Forms.ToolTip</Type>
                <Active>True</Active>
                <AutomaticDelay>500</AutomaticDelay>
                <AutoPopDelay>5000</AutoPopDelay>
                <BackColor>Color [Info]</BackColor>
                <ForeColor>Color [InfoText]</ForeColor>
                <InitialDelay>500</InitialDelay>
                <IsBalloon>False</IsBalloon>
                <OwnerDraw>False</OwnerDraw>
                <ReshowDelay>100</ReshowDelay>
                <ShowAlways>False</ShowAlways>
                <StripAmpersands>False</StripAmpersands>
                <Tag />
                <ToolTipIcon>None</ToolTipIcon>
                <ToolTipTitle />
                <UseAnimation>True</UseAnimation>
                <UseFading>True</UseFading>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>SpellingListOpenFileDialog</Name>
                <Type>System.Windows.Forms.OpenFileDialog</Type>
                <AddExtension>True</AddExtension>
                <AutoUpgradeEnabled>True</AutoUpgradeEnabled>
                <CheckFileExists>True</CheckFileExists>
                <CheckPathExists>True</CheckPathExists>
                <DefaultExt>txt</DefaultExt>
                <DereferenceLinks>True</DereferenceLinks>
                <FileName>openSpellingListDialog</FileName>
                <Filter>text files (*.text)|*.text</Filter>
                <FilterIndex>1</FilterIndex>
                <InitialDirectory>Documents</InitialDirectory>
                <Multiselect>False</Multiselect>
                <ReadOnlyChecked>False</ReadOnlyChecked>
                <RestoreDirectory>False</RestoreDirectory>
                <ShowHelp>False</ShowHelp>
                <ShowReadOnly>False</ShowReadOnly>
                <SupportMultiDottedExtensions>False</SupportMultiDottedExtensions>
                <Tag />
                <Title>Select Spelling List</Title>
                <ValidateNames>True</ValidateNames>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>SpellingListSaveFileDialog</Name>
                <Type>System.Windows.Forms.SaveFileDialog</Type>
                <AddExtension>True</AddExtension>
                <AutoUpgradeEnabled>True</AutoUpgradeEnabled>
                <CheckFileExists>True</CheckFileExists>
                <CheckPathExists>True</CheckPathExists>
                <CreatePrompt>False</CreatePrompt>
                <DefaultExt />
                <DereferenceLinks>True</DereferenceLinks>
                <FileName>SaveSpellingListDialog</FileName>
                <Filter>text files (*.text)|*.text</Filter>
                <FilterIndex>1</FilterIndex>
                <InitialDirectory>Documents</InitialDirectory>
                <OverwritePrompt>True</OverwritePrompt>
                <RestoreDirectory>False</RestoreDirectory>
                <ShowHelp>False</ShowHelp>
                <SupportMultiDottedExtensions>False</SupportMultiDottedExtensions>
                <Tag />
                <Title />
                <ValidateNames>True</ValidateNames>
              </Properties>
            </Component>
          </Components>
        </Designer>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Source</Name>
              <FullName>Art2MSpell.Source</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Source</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Collections.Generic</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Drawing</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.IO</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Reflection</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Windows.Forms</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>Classes</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>Collections</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;</CommentLine>
                  <CommentLine>Show spelling list form</CommentLine>
                  <CommentLine>&lt;/summary&gt;</CommentLine>
                  <CommentLine>&lt;seealso cref="System.Windows.Forms.Form" /&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>SpellingWordsListForm</Name>
                  <FullName>Art2MSpell.Source.SpellingWordsListForm</FullName>
                  <DocComment>&lt;summary&gt;
    Show spelling list form
&lt;/summary&gt;
&lt;seealso cref="System.Windows.Forms.Form" /&gt;</DocComment>
                  <XmlDocComment />
                  <Kind>Class</Kind>
                  <Declaration>public partial class SpellingWordsListForm</Declaration>
                  <Access>public</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Source</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Form</Name>
                      <FullName>System.Windows.Forms.Form</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;Holds items from list box so they can be checked against word to be added for duplicate.&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>duplicate</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.duplicate</FullName>
                      <DocComment>&lt;summary&gt;Holds items from list box so they can be checked against word to be added for duplicate.&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>Holds items from list box so they can be checked against word to be added for duplicate.</summary>
                      </XmlDocComment>
                      <Kind>Field</Kind>
                      <Declaration>private List&lt;string&gt; duplicate;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Collections.Generic.List&lt;System.String&gt;</TypeFullName>
                      <TypeName>List&lt;System.String&gt;</TypeName>
                      <TypeAliasedName>List&lt;System.String&gt;</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;Holds the initial with of the form.&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>formWidth</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.formWidth</FullName>
                      <DocComment>&lt;summary&gt;Holds the initial with of the form.&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>Holds the initial with of the form.</summary>
                      </XmlDocComment>
                      <Kind>Field</Kind>
                      <Declaration>private int formWidth;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Int32</TypeFullName>
                      <TypeName>Int32</TypeName>
                      <TypeAliasedName>int</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;Initializes a new instance of the &lt;see cref="SpellingWordsListForm" /&gt; class.&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SpellingWordsListForm</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SpellingWordsListForm</FullName>
                      <DocComment>&lt;summary&gt;Initializes a new instance of the &lt;see cref="SpellingWordsListForm" /&gt; class.&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>Initializes a new instance of the <see cref="SpellingWordsListForm" /> class.</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>public SpellingWordsListForm()</Declaration>
                      <Access>public</Access>
                      <MethodKind>Constructor</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>write spelling words from collection to file.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="filePath"&gt;The path to the spelling list file.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;true if spelling list is written to file else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>WriteWordsToFile</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.WriteWordsToFile</FullName>
                      <DocComment>&lt;summary&gt;
    write spelling words from collection to file.
&lt;/summary&gt;
&lt;param name="filePath"&gt;The path to the spelling list file.&lt;/param&gt;
&lt;returns&gt;true if spelling list is written to file else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private static bool WriteWordsToFile(string filePath)</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>filePath</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.WriteWordsToFile.filePath</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string filePath</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Add suggested words for misspelled words to the combo box.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>AddSuggestions</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.AddSuggestions</FullName>
                      <DocComment>&lt;summary&gt;
    Add suggested words for misspelled words to the combo box.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void AddSuggestions()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Add spelling word to the collection for saving to file.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;True if word is added to the collection else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>AddWordsToCollection</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.AddWordsToCollection</FullName>
                      <DocComment>&lt;summary&gt;
    Add spelling word to the collection for saving to file.
&lt;/summary&gt;
&lt;returns&gt;True if word is added to the collection else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private bool AddWordsToCollection()</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Add words to list box for editing of deleting.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>AddWordsToListBox</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.AddWordsToListBox</FullName>
                      <DocComment>&lt;summary&gt;
    Add words to list box for editing of deleting.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void AddWordsToListBox()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>add the word to spelling list box</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt;The word to be added.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>AddWordToListBox</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.AddWordToListBox</FullName>
                      <DocComment>&lt;summary&gt;
    add the word to spelling list box
&lt;/summary&gt;
&lt;param name="word"&gt;The word to be added.&lt;/param&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void AddWordToListBox(string word)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.AddWordToListBox.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets button background color.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ChangeControlsBackgroundColors</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.ChangeControlsBackgroundColors</FullName>
                      <DocComment>&lt;summary&gt;
    Sets button background color.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void ChangeControlsBackgroundColors()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Check to see if the word is all ready contained in the list box.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt;The word to be added to the list box.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;True if no duplicate word found in the list box else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>CheckListBoxForWord</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.CheckListBoxForWord</FullName>
                      <DocComment>&lt;summary&gt;
    Check to see if the word is all ready contained in the list box.
&lt;/summary&gt;
&lt;param name="word"&gt;The word to be added to the list box.&lt;/param&gt;
&lt;returns&gt;True if no duplicate word found in the list box else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private bool CheckListBoxForWord(string word)</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.CheckListBoxForWord.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Check the spelling word user has entered.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="word"&gt;The word to be checked for spelling.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;True if word is correct else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>CheckWordSpelling</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.CheckWordSpelling</FullName>
                      <DocComment>&lt;summary&gt;
    Check the spelling word user has entered.
&lt;/summary&gt;
&lt;param name="word"&gt;The word to be checked for spelling.&lt;/param&gt;
&lt;returns&gt;True if word is correct else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private bool CheckWordSpelling(string word)</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>word</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.CheckWordSpelling.word</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>string word</Declaration>
                          <Access />
                          <TypeFullName>System.String</TypeFullName>
                          <TypeName>String</TypeName>
                          <TypeAliasedName>string</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Fills the ListBox with words list.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>FillListBoxWithWordsList</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.FillListBoxWithWordsList</FullName>
                      <DocComment>&lt;summary&gt;
    Fills the ListBox with words list.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Fills the ListBox with words list.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void FillListBoxWithWordsList()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Get spelling words from file and place into collection for editing.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;true if words added to the collection else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>GetWordsFromFile</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.GetWordsFromFile</FullName>
                      <DocComment>&lt;summary&gt;
    Get spelling words from file and place into collection for editing.
&lt;/summary&gt;
&lt;returns&gt;true if words added to the collection else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private bool GetWordsFromFile()</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;Handles the Click event of the AddNewWordButton control.&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnButtonAddNewWord_Click</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonAddNewWord_Click</FullName>
                      <DocComment>&lt;summary&gt;Handles the Click event of the AddNewWordButton control.&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnButtonAddNewWord_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonAddNewWord_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonAddNewWord_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the AddToListButton control. Adds a new spelling word to the new spelling list.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnButtonAddWordToList_Click</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonAddWordToList_Click</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the AddToListButton control. Adds a new spelling word to the new spelling list.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnButtonAddWordToList_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonAddWordToList_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonAddWordToList_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the ClearButton control. Clears the word text box.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnButtonCancelOperation_Click</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonCancelOperation_Click</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the ClearButton control. Clears the word text box.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnButtonCancelOperation_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonCancelOperation_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonCancelOperation_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the ClearListButton control.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnButtonClearList_Click</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonClearList_Click</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the ClearListButton control.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnButtonClearList_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonClearList_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonClearList_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;Handles the Click event of the CloseButton control.&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnButtonClose_Click</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonClose_Click</FullName>
                      <DocComment>&lt;summary&gt;Handles the Click event of the CloseButton control.&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnButtonClose_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonClose_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonClose_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Create new spelling list.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/14/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnButtonCreateNewList_Click</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonCreateNewList_Click</FullName>
                      <DocComment>&lt;summary&gt;
    Create new spelling list.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;
&lt;created&gt;art2m,5/14/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnButtonCreateNewList_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonCreateNewList_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonCreateNewList_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the button DeleteList control.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnButtonDeleteList_Click</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonDeleteList_Click</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the button DeleteList control.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnButtonDeleteList_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonDeleteList_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonDeleteList_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the DeleteSelectedWordButton control.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnButtonDeleteWord_Click</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonDeleteWord_Click</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the DeleteSelectedWordButton control.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnButtonDeleteWord_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonDeleteWord_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonDeleteWord_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the EditItemButton control.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnButtonEditWord_Click</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonEditWord_Click</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the EditItemButton control.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnButtonEditWord_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonEditWord_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonEditWord_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;Handles the Click event of the SelectSpellingListButton control.&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnButtonOpenList_Click</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonOpenList_Click</FullName>
                      <DocComment>&lt;summary&gt;Handles the Click event of the SelectSpellingListButton control.&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnButtonOpenList_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonOpenList_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonOpenList_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the Click event of the SaveListButton control.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnButtonSaveList_Click</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonSaveList_Click</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the Click event of the SaveListButton control.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnButtonSaveList_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonSaveList_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnButtonSaveList_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Handles the SelectedIndexChanged event of the WordsList control. Gets the item selected and places it in the</CommentLine>
                      <CommentLine>words text box for editing. Gets the item index so edit changes can be made in the words list box.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>OnWordsListSelectedIndexChanged</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.OnWordsListSelectedIndexChanged</FullName>
                      <DocComment>&lt;summary&gt;
    Handles the SelectedIndexChanged event of the WordsList control. Gets the item selected and places it in the
    words text box for editing. Gets the item index so edit changes can be made in the words list box.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;The &lt;see cref="EventArgs" /&gt; instance containing the event data.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void OnWordsListSelectedIndexChanged(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnWordsListSelectedIndexChanged.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.OnWordsListSelectedIndexChanged.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Read header from file validate is real spelling file.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;returns&gt;True if valid spelling file else false.&lt;/returns&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/14/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ReadHeader</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.ReadHeader</FullName>
                      <DocComment>&lt;summary&gt;
    Read header from file validate is real spelling file.
&lt;/summary&gt;
&lt;returns&gt;True if valid spelling file else false.&lt;/returns&gt;
&lt;created&gt;art2m,5/14/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private bool ReadHeader()</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Boolean</TypeFullName>
                      <TypeName>Boolean</TypeName>
                      <TypeAliasedName>bool</TypeAliasedName>
                      <MethodKind>Method with return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Saves the spelling words to spelling list.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SaveSpellingWordsToSpellingList</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SaveSpellingWordsToSpellingList</FullName>
                      <DocComment>&lt;summary&gt;
    Saves the spelling words to spelling list.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Saves the spelling words to spelling list.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SaveSpellingWordsToSpellingList()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the adding word properties.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetAddingWordProperties</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetAddingWordProperties</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the adding word properties.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the adding word properties.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetAddingWordProperties()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the delete property states.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetDeletePropertyStates</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetDeletePropertyStates</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the delete property states.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the delete property states.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetDeletePropertyStates()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the save operation properties.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetSaveOperationProperties</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetSaveOperationProperties</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the save operation properties.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the save operation properties.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetSaveOperationProperties()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Set tab order when user selects Add New Word Button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetTabOrderAddNewWordButton</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetTabOrderAddNewWordButton</FullName>
                      <DocComment>&lt;summary&gt;
    Set tab order when user selects Add New Word Button.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Set tab order when user selects Add New Word Button.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetTabOrderAddNewWordButton()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>SetTabOrderFormLoad</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetTabOrderFormLoad</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetTabOrderFormLoad()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;Sets the tab order cancel operation button.&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetTabOrderCancelOperationButton</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetTabOrderCancelOperationButton</FullName>
                      <DocComment>&lt;summary&gt;Sets the tab order cancel operation button.&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>Sets the tab order cancel operation button.</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetTabOrderCancelOperationButton()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>SetTabOrderAddWordToList</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetTabOrderAddWordToList</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetTabOrderAddWordToList()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Resize controls for form size change.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/15/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/15/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SpellingWordsListForm_Resize</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SpellingWordsListForm_Resize</FullName>
                      <DocComment>&lt;summary&gt;
    Resize controls for form size change.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;
&lt;created&gt;art2m,5/15/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/15/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SpellingWordsListForm_Resize(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.SpellingWordsListForm_Resize.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.SpellingWordsListForm_Resize.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>SpellingWordsListForm.Designer.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellingWordsListForm.Designer.cs</FullPath>
          <SubType>Code</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/15/2019 7:16:42 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellingWordsListForm.Designer.cs</URL>
          <Filesize>21355</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>True</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellingWordsListForm.Designer.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Source</Name>
              <FullName>Art2MSpell.Source</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Source</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;</CommentLine>
                  <CommentLine>Required designer variable.</CommentLine>
                  <CommentLine>&lt;/summary&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>SpellingWordsListForm</Name>
                  <FullName>Art2MSpell.Source.SpellingWordsListForm</FullName>
                  <DocComment />
                  <XmlDocComment />
                  <Kind>Class</Kind>
                  <Declaration>partial class SpellingWordsListForm</Declaration>
                  <Access>internal</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Source</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Form</Name>
                      <FullName>System.Windows.Forms.Form</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Required designer variable.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>components</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.components</FullName>
                      <DocComment>&lt;summary&gt;
Required designer variable.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Required designer variable.
</summary>
                      </XmlDocComment>
                      <Kind>Field</Kind>
                      <Declaration>private System.ComponentModel.IContainer components = null;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.ComponentModel.IContainer</TypeFullName>
                      <TypeName>IContainer</TypeName>
                      <TypeAliasedName>IContainer</TypeAliasedName>
                      <InitExpression>null</InitExpression>
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Clean up any resources being used.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="disposing"&gt;true if managed resources should be disposed; otherwise, false.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>Dispose</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.Dispose</FullName>
                      <DocComment>&lt;summary&gt;
Clean up any resources being used.
&lt;/summary&gt;
&lt;param name="disposing"&gt;true if managed resources should be disposed; otherwise, false.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>protected override void Dispose(bool disposing)</Declaration>
                      <Access>protected</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>True</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>True</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>disposing</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.Dispose.disposing</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool disposing</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Required method for Designer support - do not modify</CommentLine>
                      <CommentLine>the contents of this method with the code editor.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>InitializeComponent</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.InitializeComponent</FullName>
                      <DocComment>&lt;summary&gt;
Required method for Designer support - do not modify
the contents of this method with the code editor.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Required method for Designer support - do not modify
the contents of this method with the code editor.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void InitializeComponent()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>MnuNewSpellListMenuStrip</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.MnuNewSpellListMenuStrip</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.MenuStrip MnuNewSpellListMenuStrip;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.MenuStrip</TypeFullName>
                      <TypeName>MenuStrip</TypeName>
                      <TypeAliasedName>MenuStrip</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>FileToolStripMenuItem</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.FileToolStripMenuItem</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolStripMenuItem FileToolStripMenuItem;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolStripMenuItem</TypeFullName>
                      <TypeName>ToolStripMenuItem</TypeName>
                      <TypeAliasedName>ToolStripMenuItem</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>mnuClose</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.mnuClose</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolStripMenuItem mnuClose;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolStripMenuItem</TypeFullName>
                      <TypeName>ToolStripMenuItem</TypeName>
                      <TypeAliasedName>ToolStripMenuItem</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>spelListToolTip</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.spelListToolTip</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolTip spelListToolTip;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolTip</TypeFullName>
                      <TypeName>ToolTip</TypeName>
                      <TypeAliasedName>ToolTip</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>SpellingListOpenFileDialog</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SpellingListOpenFileDialog</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.OpenFileDialog SpellingListOpenFileDialog;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.OpenFileDialog</TypeFullName>
                      <TypeName>OpenFileDialog</TypeName>
                      <TypeAliasedName>OpenFileDialog</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>mnuOpenSpellingList</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.mnuOpenSpellingList</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolStripMenuItem mnuOpenSpellingList;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolStripMenuItem</TypeFullName>
                      <TypeName>ToolStripMenuItem</TypeName>
                      <TypeAliasedName>ToolStripMenuItem</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>SpellingListSaveFileDialog</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SpellingListSaveFileDialog</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.SaveFileDialog SpellingListSaveFileDialog;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.SaveFileDialog</TypeFullName>
                      <TypeName>SaveFileDialog</TypeName>
                      <TypeAliasedName>SaveFileDialog</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>toolStripSeparator1</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.toolStripSeparator1</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolStripSeparator toolStripSeparator1;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolStripSeparator</TypeFullName>
                      <TypeName>ToolStripSeparator</TypeName>
                      <TypeAliasedName>ToolStripSeparator</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnClose</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.btnClose</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnClose;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>flpLeftPanel</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.flpLeftPanel</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.FlowLayoutPanel flpLeftPanel;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.FlowLayoutPanel</TypeFullName>
                      <TypeName>FlowLayoutPanel</TypeName>
                      <TypeAliasedName>FlowLayoutPanel</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnCreateNewList</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.btnCreateNewList</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnCreateNewList;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnOpenist</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.btnOpenist</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnOpenist;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnClearist</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.btnClearist</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnClearist;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnDeleteList</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.btnDeleteList</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnDeleteList;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnSaveList</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.btnSaveList</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnSaveList;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>lstWords</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.lstWords</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ListBox lstWords;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ListBox</TypeFullName>
                      <TypeName>ListBox</TypeName>
                      <TypeAliasedName>ListBox</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>flpBottomPanel</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.flpBottomPanel</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.FlowLayoutPanel flpBottomPanel;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.FlowLayoutPanel</TypeFullName>
                      <TypeName>FlowLayoutPanel</TypeName>
                      <TypeAliasedName>FlowLayoutPanel</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnAddNewWord</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.btnAddNewWord</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnAddNewWord;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnEditWord</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.btnEditWord</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnEditWord;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnDeleteWord</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.btnDeleteWord</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnDeleteWord;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnCancelOperation</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.btnCancelOperation</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnCancelOperation;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnAddWordToList</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.btnAddWordToList</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnAddWordToList;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>cboWord</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.cboWord</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ComboBox cboWord;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ComboBox</TypeFullName>
                      <TypeName>ComboBox</TypeName>
                      <TypeAliasedName>ComboBox</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>SpellingWordsListForm.resx</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellingWordsListForm.resx</FullPath>
          <SubType>Text</SubType>
          <Extension>.resx</Extension>
          <CustomToolOutput />
          <DateModified>5/15/2019 6:17:58 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>EmbeddedResource</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>EmbeddedResource</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellingWordsListForm.resx</URL>
          <Filesize>6663</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>True</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellingWordsListForm.resx</LocalPath>
          <ModifiedBy />
        </Properties>
      </File>
      <File>
        <Properties>
          <FileName>SpellingWordsListForm.SetBackgroundColor.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellingWordsListForm.SetBackgroundColor.cs</FullPath>
          <SubType>Designer</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/12/2019 9:44:40 PM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellingWordsListForm.SetBackgroundColor.cs</URL>
          <Filesize>7957</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/8/2019 5:50:48 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellingWordsListForm.SetBackgroundColor.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <Designer>
          <Properties>
            <Name>SpellingWordsListForm</Name>
            <Type>System.Windows.Forms.Form</Type>
            <AcceptButton />
            <AccessibleDescription />
            <AccessibleName />
            <AccessibleRole>Default</AccessibleRole>
            <AllowDrop>False</AllowDrop>
            <AutoScaleMode>Inherit</AutoScaleMode>
            <AutoScroll>False</AutoScroll>
            <AutoScrollMargin>{Width=0, Height=0}</AutoScrollMargin>
            <AutoScrollMinSize>{Width=0, Height=0}</AutoScrollMinSize>
            <AutoSize>False</AutoSize>
            <AutoSizeMode>GrowOnly</AutoSizeMode>
            <AutoValidate>EnablePreventFocusChange</AutoValidate>
            <BackColor>Color [Control]</BackColor>
            <BackgroundImage />
            <BackgroundImageLayout>Tile</BackgroundImageLayout>
            <CancelButton />
            <CausesValidation>True</CausesValidation>
            <ContextMenuStrip />
            <ControlBox>True</ControlBox>
            <Cursor>[Cursor: Default]</Cursor>
            <DoubleBuffered>False</DoubleBuffered>
            <Enabled>True</Enabled>
            <Font>[Font: Name=Microsoft Sans Serif, Size=8.25, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
            <ForeColor>Color [ControlText]</ForeColor>
            <FormBorderStyle>Sizable</FormBorderStyle>
            <HelpButton>False</HelpButton>
            <ImeMode>NoControl</ImeMode>
            <IsMdiContainer>False</IsMdiContainer>
            <KeyPreview>False</KeyPreview>
            <Language />
            <Localizable>False</Localizable>
            <Location>{X=0,Y=0}</Location>
            <Locked>False</Locked>
            <MainMenuStrip />
            <MaximizeBox>True</MaximizeBox>
            <MaximumSize>{Width=0, Height=0}</MaximumSize>
            <MinimizeBox>True</MinimizeBox>
            <MinimumSize>{Width=0, Height=0}</MinimumSize>
            <Opacity>1</Opacity>
            <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
            <RightToLeft>No</RightToLeft>
            <RightToLeftLayout>False</RightToLeftLayout>
            <ShowIcon>True</ShowIcon>
            <ShowInTaskbar>True</ShowInTaskbar>
            <Size>{Width=300, Height=300}</Size>
            <SizeGripStyle>Auto</SizeGripStyle>
            <StartPosition>WindowsDefaultLocation</StartPosition>
            <Tag />
            <Text />
            <TopMost>False</TopMost>
            <TransparencyKey>Color [Empty]</TransparencyKey>
            <UseWaitCursor>False</UseWaitCursor>
            <WindowState>Normal</WindowState>
          </Properties>
          <Components />
        </Designer>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Source</Name>
              <FullName>Art2MSpell.Source</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Source</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>System.Drawing</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;</CommentLine>
                  <CommentLine>Set background colors for controls.</CommentLine>
                  <CommentLine>&lt;/summary&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>SpellingWordsListForm</Name>
                  <FullName>Art2MSpell.Source.SpellingWordsListForm</FullName>
                  <DocComment>&lt;summary&gt;
    Set background colors for controls.
&lt;/summary&gt;</DocComment>
                  <XmlDocComment>
                    <summary>
    Set background colors for controls.
</summary>
                  </XmlDocComment>
                  <Kind>Class</Kind>
                  <Declaration>public partial class SpellingWordsListForm</Declaration>
                  <Access>public</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Source</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Form</Name>
                      <FullName>System.Windows.Forms.Form</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the background color for the add button based on button state.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetAddNewItemButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetAddNewItemButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the background color for the add button based on button state.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetAddNewItemButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the color of the add to list button background.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetAddToListButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetAddToListButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the color of the add to list button background.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetAddToListButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the background color for the clear button based on button state.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetCancelOperationButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetCancelOperationButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the background color for the clear button based on button state.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetCancelOperationButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the clear list button background color.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetClearListButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetClearListButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the clear list button background color.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetClearListButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the background color for the close button based on button state.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetCloseButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetCloseButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the background color for the close button based on button state.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetCloseButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the background color for the create new list button based on button state.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetCreateNewListButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetCreateNewListButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the background color for the create new list button based on button state.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetCreateNewListButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the background color for the delete list button based on button state.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetDeleteListButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetDeleteListButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the background color for the delete list button based on button state.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetDeleteListButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the background color for the delete selected word button based on button state.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetDeleteSelectedWord_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetDeleteSelectedWord_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the background color for the delete selected word button based on button state.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetDeleteSelectedWord_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the color of the edit item button background.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetEditItemButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetEditItemButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the color of the edit item button background.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetEditItemButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the save list button background color for.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetSaveListButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetSaveListButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the save list button background color for.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetSaveListButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the background color for the select spelling list button based on the state.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetSelectSpellingListButton_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetSelectSpellingListButton_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the background color for the select spelling list button based on the state.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetSelectSpellingListButton_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the words ListBox background color.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetWordsListBox_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetWordsListBox_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the words ListBox background color.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetWordsListBox_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the word text box background color.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/12/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetWordTextBox_BackgroundColor</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetWordTextBox_BackgroundColor</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the word text box background color.
&lt;/summary&gt;
&lt;created&gt;art2m,5/12/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/12/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetWordTextBox_BackgroundColor()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>SpellingWordsListForm.SetButtonState.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellingWordsListForm.SetButtonState.cs</FullPath>
          <SubType>Designer</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/13/2019 1:15:04 PM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellingWordsListForm.SetButtonState.cs</URL>
          <Filesize>22348</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/8/2019 5:45:40 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellingWordsListForm.SetButtonState.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <Designer>
          <Properties>
            <Name>SpellingWordsListForm</Name>
            <Type>System.Windows.Forms.Form</Type>
            <AcceptButton />
            <AccessibleDescription />
            <AccessibleName />
            <AccessibleRole>Default</AccessibleRole>
            <AllowDrop>False</AllowDrop>
            <AutoScaleMode>Inherit</AutoScaleMode>
            <AutoScroll>False</AutoScroll>
            <AutoScrollMargin>{Width=0, Height=0}</AutoScrollMargin>
            <AutoScrollMinSize>{Width=0, Height=0}</AutoScrollMinSize>
            <AutoSize>False</AutoSize>
            <AutoSizeMode>GrowOnly</AutoSizeMode>
            <AutoValidate>EnablePreventFocusChange</AutoValidate>
            <BackColor>Color [Control]</BackColor>
            <BackgroundImage />
            <BackgroundImageLayout>Tile</BackgroundImageLayout>
            <CancelButton />
            <CausesValidation>True</CausesValidation>
            <ContextMenuStrip />
            <ControlBox>True</ControlBox>
            <Cursor>[Cursor: Default]</Cursor>
            <DoubleBuffered>False</DoubleBuffered>
            <Enabled>True</Enabled>
            <Font>[Font: Name=Microsoft Sans Serif, Size=8.25, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
            <ForeColor>Color [ControlText]</ForeColor>
            <FormBorderStyle>Sizable</FormBorderStyle>
            <HelpButton>False</HelpButton>
            <ImeMode>NoControl</ImeMode>
            <IsMdiContainer>False</IsMdiContainer>
            <KeyPreview>False</KeyPreview>
            <Language />
            <Localizable>False</Localizable>
            <Location>{X=0,Y=0}</Location>
            <Locked>False</Locked>
            <MainMenuStrip />
            <MaximizeBox>True</MaximizeBox>
            <MaximumSize>{Width=0, Height=0}</MaximumSize>
            <MinimizeBox>True</MinimizeBox>
            <MinimumSize>{Width=0, Height=0}</MinimumSize>
            <Opacity>1</Opacity>
            <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
            <RightToLeft>No</RightToLeft>
            <RightToLeftLayout>False</RightToLeftLayout>
            <ShowIcon>True</ShowIcon>
            <ShowInTaskbar>True</ShowInTaskbar>
            <Size>{Width=300, Height=300}</Size>
            <SizeGripStyle>Auto</SizeGripStyle>
            <StartPosition>WindowsDefaultLocation</StartPosition>
            <Tag />
            <Text />
            <TopMost>False</TopMost>
            <TransparencyKey>Color [Empty]</TransparencyKey>
            <UseWaitCursor>False</UseWaitCursor>
            <WindowState>Normal</WindowState>
          </Properties>
          <Components />
        </Designer>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Source</Name>
              <FullName>Art2MSpell.Source</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Source</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <Properties>
                  <Kind>Using</Kind>
                  <Name>Classes</Name>
                  <Alias />
                </Properties>
              </CodeElement>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;This class is for setting button states.&lt;/summary&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>SpellingWordsListForm</Name>
                  <FullName>Art2MSpell.Source.SpellingWordsListForm</FullName>
                  <DocComment>&lt;summary&gt;This class is for setting button states.&lt;/summary&gt;</DocComment>
                  <XmlDocComment>
                    <summary>This class is for setting button states.</summary>
                  </XmlDocComment>
                  <Kind>Class</Kind>
                  <Declaration>public partial class SpellingWordsListForm</Declaration>
                  <Access>public</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Source</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Form</Name>
                      <FullName>System.Windows.Forms.Form</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the buttons enabled state when the add to list butt0n is Selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonsEnabledState_AddToListButtonClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetButtonsEnabledState_AddToListButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the buttons enabled state when the add to list butt0n is Selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the buttons enabled state when the add to list butt0n is Selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonsEnabledState_AddToListButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the buttons enabled state when the cancel operation button is selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonsEnabledState_CancelOperationButtonClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetButtonsEnabledState_CancelOperationButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the buttons enabled state when the cancel operation button is selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the buttons enabled state when the cancel operation button is selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonsEnabledState_CancelOperationButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the buttons enabled state when the clear list button is selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonsEnabledState_ClearListButtonClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetButtonsEnabledState_ClearListButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the buttons enabled state when the clear list button is selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the buttons enabled state when the clear list button is selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonsEnabledState_ClearListButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the buttons enabled state when the create new list button is selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonsEnabledState_CreateNewListButtonClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetButtonsEnabledState_CreateNewListButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the buttons enabled state when the create new list button is selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the buttons enabled state when the create new list button is selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonsEnabledState_CreateNewListButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the buttons enabled state when the delete selected word button is selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonsEnabledState_DeleteSelectedWordButtonClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetButtonsEnabledState_DeleteSelectedWordButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the buttons enabled state when the delete selected word button is selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the buttons enabled state when the delete selected word button is selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonsEnabledState_DeleteSelectedWordButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the buttons enabled state when the delete spelling list button is selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonsEnabledState_DeleteSpellingListButtonClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetButtonsEnabledState_DeleteSpellingListButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the buttons enabled state when the delete spelling list button is selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the buttons enabled state when the delete spelling list button is selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonsEnabledState_DeleteSpellingListButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the buttons enabled state when the edit item button is selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonsEnabledState_EditItemButtonClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetButtonsEnabledState_EditItemButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the buttons enabled state when the edit item button is selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the buttons enabled state when the edit item button is selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonsEnabledState_EditItemButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the Buttons when form is loading.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonsEnabledState_FormLoadEvent</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetButtonsEnabledState_FormLoadEvent</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the Buttons when form is loading.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the state of the Buttons when form is loading.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonsEnabledState_FormLoadEvent()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the buttons enabled state When the open spelling list button is selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonsEnabledState_OpenSpellingListButtonStateClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetButtonsEnabledState_OpenSpellingListButtonStateClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the buttons enabled state When the open spelling list button is selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the buttons enabled state When the open spelling list button is selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonsEnabledState_OpenSpellingListButtonStateClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the buttons enabled state When saving spelling list button is selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonsEnabledState_SaveSpellingListButtonStateClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetButtonsEnabledState_SaveSpellingListButtonStateClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the buttons enabled state When saving spelling list button is selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the buttons enabled state When saving spelling list button is selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonsEnabledState_SaveSpellingListButtonStateClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the buttons enabled state when selected index changed.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonsEnabledState_WordsListSelectedIndexChanges</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetButtonsEnabledState_WordsListSelectedIndexChanges</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the buttons enabled state when selected index changed.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the buttons enabled state when selected index changed.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonsEnabledState_WordsListSelectedIndexChanges()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the clear list button state when the words list selected index changes.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetClearListButtonState_WordsListSelectedIndexChanged</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetClearListButtonState_WordsListSelectedIndexChanged</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the clear list button state when the words list selected index changes.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the clear list button state when the words list selected index changes.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetClearListButtonState_WordsListSelectedIndexChanged()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the create new spelling list button enabled state when cancel operation button clicked.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonEnabledStat_CancelButtonClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetButtonEnabledStat_CancelButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the create new spelling list button enabled state when cancel operation button clicked.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the create new spelling list button enabled state when cancel operation button clicked.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonEnabledStat_CancelButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the buttons enabled state when add new item button is selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonsEnabledState_AddNewButtonClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetButtonsEnabledState_AddNewButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the buttons enabled state when add new item button is selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the buttons enabled state when add new item button is selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonsEnabledState_AddNewButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the delete button enable state when the add to list button is selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetDeleteButtonEnableState_AddToListButtonClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetDeleteButtonEnableState_AddToListButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the delete button enable state when the add to list button is selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the delete button enable state when the add to list button is selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetDeleteButtonEnableState_AddToListButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the delete list button state when cancel operation button is selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetDeleteListButtonState_CancelOperationButtonClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetDeleteListButtonState_CancelOperationButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the delete list button state when cancel operation button is selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the delete list button state when cancel operation button is selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetDeleteListButtonState_CancelOperationButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the delete spelling list button enabled state when cancel operation button is selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetDeleteSpellingListButtonEnabledState_CancelOperationButtonClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetDeleteSpellingListButtonEnabledState_CancelOperationButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the delete spelling list button enabled state when cancel operation button is selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the delete spelling list button enabled state when cancel operation button is selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetDeleteSpellingListButtonEnabledState_CancelOperationButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the delete spelling list button enabled state when the words list selected index changes.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetDeleteSpellingListButtonEnabledState_WordsListSelectedIndexChanges</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetDeleteSpellingListButtonEnabledState_WordsListSelectedIndexChanges</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the delete spelling list button enabled state when the words list selected index changes.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the delete spelling list button enabled state when the words list selected index changes.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetDeleteSpellingListButtonEnabledState_WordsListSelectedIndexChanges()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the save button state when add to list button is selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetSaveButtonState_AddToListButtonClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetSaveButtonState_AddToListButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the save button state when add to list button is selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the save button state when add to list button is selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetSaveButtonState_AddToListButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the save list button state add new button clicked.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetSaveListButtonEnabledState_AddNewButtonClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetSaveListButtonEnabledState_AddNewButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the save list button state add new button clicked.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the save list button state add new button clicked.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetSaveListButtonEnabledState_AddNewButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the save list button enabled state when delete selected word button selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetButtonSaveEnabledState_OnButtonDeleteSelectedWordClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetButtonSaveEnabledState_OnButtonDeleteSelectedWordClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the save list button enabled state when delete selected word button selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the save list button enabled state when delete selected word button selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetButtonSaveEnabledState_OnButtonDeleteSelectedWordClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the save list button enabled state when delete spelling list button selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetSaveListButtonEnabledState_DeleteSpellingListButtonClicked</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetSaveListButtonEnabledState_DeleteSpellingListButtonClicked</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the save list button enabled state when delete spelling list button selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the save list button enabled state when delete spelling list button selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetSaveListButtonEnabledState_DeleteSpellingListButtonClicked()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the save list enabled button state when cancel operation button selected.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetSaveListEnabledButtonState_CancelOperationButtonClick</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetSaveListEnabledButtonState_CancelOperationButtonClick</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the save list enabled button state when cancel operation button selected.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
    Sets the save list enabled button state when cancel operation button selected.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void SetSaveListEnabledButtonState_CancelOperationButtonClick()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the add new item button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetAddNewItemButtonState</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetAddNewItemButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the add new item button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetAddNewItemButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.SetAddNewItemButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the add to list button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetAddToListButtonState</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetAddToListButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the add to list button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetAddToListButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.SetAddToListButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the clear item button click.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetCancelOperationButtonState</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetCancelOperationButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the clear item button click.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetCancelOperationButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.SetCancelOperationButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the clear list button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetClearListButtonState</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetClearListButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the clear list button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetClearListButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.SetClearListButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the close button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetCloseButtonState</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetCloseButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the close button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetCloseButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.SetCloseButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the create new list button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetCreateNewListButtonState</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetCreateNewListButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the create new list button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetCreateNewListButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.SetCreateNewListButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the delete selected word button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetDeleteSelectedWordButtonState</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetDeleteSelectedWordButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the delete selected word button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetDeleteSelectedWordButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.SetDeleteSelectedWordButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the delete spelling list button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetDeleteSpellingListButtonState</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetDeleteSpellingListButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the delete spelling list button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetDeleteSpellingListButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.SetDeleteSpellingListButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the edit button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetEditItemButtonState</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetEditItemButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the edit button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetEditItemButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.SetEditItemButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the save list button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetSaveListButtonState</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetSaveListButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the save list button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetSaveListButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.SetSaveListButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the select spelling list button.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetSelectSpellingListButtonState</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetSelectSpellingListButtonState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the select spelling list button.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetSelectSpellingListButtonState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.SetSelectSpellingListButtonState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the words ListBox.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetWordsListBoxState</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetWordsListBoxState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the words ListBox.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetWordsListBoxState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.SetWordsListBoxState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Sets the state of the words text box.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SetWordsTextBoxState</Name>
                      <FullName>Art2MSpell.Source.SpellingWordsListForm.SetWordsTextBoxState</FullName>
                      <DocComment>&lt;summary&gt;
    Sets the state of the words text box.
&lt;/summary&gt;
&lt;param name="stateVal"&gt;if set to &lt;c&gt;true&lt;/c&gt; [state value].&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SetWordsTextBoxState(bool stateVal)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>stateVal</Name>
                          <FullName>Art2MSpell.Source.SpellingWordsListForm.SetWordsTextBoxState.stateVal</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool stateVal</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>SpellItMainForm.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellItMainForm.cs</FullPath>
          <SubType>Designer</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/14/2019 10:04:18 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellItMainForm.cs</URL>
          <Filesize>5333</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellItMainForm.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <Designer>
          <Properties>
            <Name>SpellItMainForm</Name>
            <Type>System.Windows.Forms.Form</Type>
            <AcceptButton />
            <AccessibleDescription />
            <AccessibleName />
            <AccessibleRole>Default</AccessibleRole>
            <AllowDrop>False</AllowDrop>
            <AutoScaleMode>Font</AutoScaleMode>
            <AutoScroll>False</AutoScroll>
            <AutoScrollMargin>{Width=0, Height=0}</AutoScrollMargin>
            <AutoScrollMinSize>{Width=0, Height=0}</AutoScrollMinSize>
            <AutoSize>False</AutoSize>
            <AutoSizeMode>GrowOnly</AutoSizeMode>
            <AutoValidate>EnablePreventFocusChange</AutoValidate>
            <BackColor>Color [Control]</BackColor>
            <BackgroundImage />
            <BackgroundImageLayout>Tile</BackgroundImageLayout>
            <CancelButton />
            <CausesValidation>True</CausesValidation>
            <ContextMenuStrip />
            <ControlBox>True</ControlBox>
            <Cursor>[Cursor: Default]</Cursor>
            <DoubleBuffered>False</DoubleBuffered>
            <Enabled>True</Enabled>
            <Font>[Font: Name=Microsoft Sans Serif, Size=8.25, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
            <ForeColor>Color [ControlText]</ForeColor>
            <FormBorderStyle>Sizable</FormBorderStyle>
            <HelpButton>False</HelpButton>
            <ImeMode>NoControl</ImeMode>
            <IsMdiContainer>False</IsMdiContainer>
            <KeyPreview>False</KeyPreview>
            <Language />
            <Localizable>False</Localizable>
            <Location>{X=0,Y=0}</Location>
            <Locked>True</Locked>
            <MainMenuStrip>MainMenuMenuStrip [System.Windows.Forms.MenuStrip], Name: MainMenuMenuStrip, Items: 3</MainMenuStrip>
            <MaximizeBox>True</MaximizeBox>
            <MaximumSize>{Width=0, Height=0}</MaximumSize>
            <MinimizeBox>True</MinimizeBox>
            <MinimumSize>{Width=800, Height=600}</MinimumSize>
            <Opacity>1</Opacity>
            <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
            <RightToLeft>No</RightToLeft>
            <RightToLeftLayout>False</RightToLeftLayout>
            <ShowIcon>True</ShowIcon>
            <ShowInTaskbar>True</ShowInTaskbar>
            <Size>{Width=800, Height=600}</Size>
            <SizeGripStyle>Auto</SizeGripStyle>
            <StartPosition>CenterScreen</StartPosition>
            <Tag />
            <Text>Spelling  Program</Text>
            <TopMost>False</TopMost>
            <TransparencyKey>Color [Empty]</TransparencyKey>
            <UseWaitCursor>False</UseWaitCursor>
            <WindowState>Normal</WindowState>
          </Properties>
          <Components>
            <Component>
              <Properties>
                <Name>flpButtons</Name>
                <Type>System.Windows.Forms.FlowLayoutPanel</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Top, Left</Anchor>
                <AutoScroll>False</AutoScroll>
                <AutoScrollMargin>{Width=0, Height=0}</AutoScrollMargin>
                <AutoScrollMinSize>{Width=0, Height=0}</AutoScrollMinSize>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <BorderStyle>None</BorderStyle>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlowDirection>LeftToRight</FlowDirection>
                <Font>[Font: Name=Microsoft Sans Serif, Size=8.25, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <ImeMode>NoControl</ImeMode>
                <Location>{X=139,Y=251}</Location>
                <Locked>True</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=10,Top=3,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=457, Height=58}</Size>
                <TabIndex>6</TabIndex>
                <TabStop>False</TabStop>
                <Tag />
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
                <WrapContents>True</WrapContents>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnPracticeSpellingWords</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Bottom, Right</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=13,Y=6}</Location>
                <Locked>True</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=160, Height=44}</Size>
                <TabIndex>5</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Practice Spelling Words</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>btnSpellingList</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Bottom, Right</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=276,Y=9}</Location>
                <Locked>True</Locked>
                <Margin>{Left=100,Top=0,Right=0,Bottom=0}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=160, Height=44}</Size>
                <TabIndex>6</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Spelling List</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>ExitButton</Name>
                <Type>System.Windows.Forms.Button</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <Anchor>Bottom, Right</Anchor>
                <AutoEllipsis>False</AutoEllipsis>
                <AutoSize>False</AutoSize>
                <AutoSizeMode>GrowOnly</AutoSizeMode>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <CausesValidation>True</CausesValidation>
                <ContextMenuStrip />
                <Cursor>[Cursor: Default]</Cursor>
                <DialogResult>None</DialogResult>
                <Dock>None</Dock>
                <Enabled>True</Enabled>
                <FlatAppearance>System.Windows.Forms.FlatButtonAppearance</FlatAppearance>
                <FlatStyle>Standard</FlatStyle>
                <Font>[Font: Name=Microsoft Sans Serif, Size=9.75, Units=3, GdiCharSet=0, GdiVerticalFont=False]</Font>
                <ForeColor>Color [ControlText]</ForeColor>
                <Image />
                <ImageAlign>MiddleCenter</ImageAlign>
                <ImageIndex>-1</ImageIndex>
                <ImageKey />
                <ImageList />
                <Location>{X=664,Y=517}</Location>
                <Locked>True</Locked>
                <Margin>{Left=3,Top=3,Right=3,Bottom=3}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=0,Top=0,Right=0,Bottom=0}</Padding>
                <RightToLeft>No</RightToLeft>
                <Size>{Width=108, Height=32}</Size>
                <TabIndex>5</TabIndex>
                <TabStop>True</TabStop>
                <Tag />
                <Text>Exit</Text>
                <TextAlign>MiddleCenter</TextAlign>
                <TextImageRelation>Overlay</TextImageRelation>
                <UseCompatibleTextRendering>False</UseCompatibleTextRendering>
                <UseMnemonic>True</UseMnemonic>
                <UseVisualStyleBackColor>True</UseVisualStyleBackColor>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>MainMenuMenuStrip</Name>
                <Type>System.Windows.Forms.MenuStrip</Type>
                <AccessibleDescription />
                <AccessibleName />
                <AccessibleRole>Default</AccessibleRole>
                <AllowDrop>False</AllowDrop>
                <AllowItemReorder>False</AllowItemReorder>
                <AllowMerge>True</AllowMerge>
                <Anchor>Top, Left</Anchor>
                <AutoSize>True</AutoSize>
                <BackColor>Color [Control]</BackColor>
                <BackgroundImage />
                <BackgroundImageLayout>Tile</BackgroundImageLayout>
                <ContextMenuStrip />
                <Dock>Top</Dock>
                <Enabled>True</Enabled>
                <Font>[Font: Name=Segoe UI, Size=9, Units=3, GdiCharSet=1, GdiVerticalFont=False]</Font>
                <GripMargin>{Left=2,Top=2,Right=0,Bottom=2}</GripMargin>
                <GripStyle>Hidden</GripStyle>
                <ImageScalingSize>{Width=16, Height=16}</ImageScalingSize>
                <ImeMode>NoControl</ImeMode>
                <Items>System.Windows.Forms.ToolStripItemCollection</Items>
                <LayoutStyle>HorizontalStackWithOverflow</LayoutStyle>
                <Location>{X=0,Y=0}</Location>
                <Locked>True</Locked>
                <Margin>{Left=0,Top=0,Right=0,Bottom=0}</Margin>
                <MaximumSize>{Width=0, Height=0}</MaximumSize>
                <MdiWindowListItem />
                <MinimumSize>{Width=0, Height=0}</MinimumSize>
                <Padding>{Left=6,Top=2,Right=0,Bottom=2}</Padding>
                <RenderMode>ManagerRenderMode</RenderMode>
                <RightToLeft>No</RightToLeft>
                <ShowItemToolTips>False</ShowItemToolTips>
                <Size>{Width=784, Height=24}</Size>
                <Stretch>True</Stretch>
                <TabIndex>0</TabIndex>
                <TabStop>False</TabStop>
                <Tag />
                <Text>MainMenu</Text>
                <TextDirection>Horizontal</TextDirection>
                <UseWaitCursor>False</UseWaitCursor>
                <Visible>True</Visible>
              </Properties>
            </Component>
            <Component>
              <Properties>
                <Name>spellItToolTip</Name>
                <Type>System.Windows.Forms.ToolTip</Type>
                <Active>True</Active>
                <AutomaticDelay>500</AutomaticDelay>
                <AutoPopDelay>5000</AutoPopDelay>
                <BackColor>Color [Info]</BackColor>
                <ForeColor>Color [InfoText]</ForeColor>
                <InitialDelay>500</InitialDelay>
                <IsBalloon>False</IsBalloon>
                <OwnerDraw>False</OwnerDraw>
                <ReshowDelay>100</ReshowDelay>
                <ShowAlways>False</ShowAlways>
                <StripAmpersands>False</StripAmpersands>
                <Tag />
                <ToolTipIcon>None</ToolTipIcon>
                <ToolTipTitle />
                <UseAnimation>True</UseAnimation>
                <UseFading>True</UseFading>
              </Properties>
            </Component>
          </Components>
        </Designer>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Kind>Using</Kind>
              <Name>System</Name>
              <Alias />
            </Properties>
          </CodeElement>
          <CodeElement>
            <Properties>
              <Kind>Using</Kind>
              <Name>System.Drawing</Name>
              <Alias />
            </Properties>
          </CodeElement>
          <CodeElement>
            <Properties>
              <Kind>Using</Kind>
              <Name>System.Windows.Forms</Name>
              <Alias />
            </Properties>
          </CodeElement>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Source</Name>
              <FullName>Art2MSpell.Source</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Source</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;</CommentLine>
                  <CommentLine>The main win class.</CommentLine>
                  <CommentLine>&lt;/summary&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>SpellItMainForm</Name>
                  <FullName>Art2MSpell.Source.SpellItMainForm</FullName>
                  <DocComment>&lt;summary&gt;
The main win class.
&lt;/summary&gt;</DocComment>
                  <XmlDocComment>
                    <summary>
The main win class.
</summary>
                  </XmlDocComment>
                  <Kind>Class</Kind>
                  <Declaration>public partial class SpellItMainForm</Declaration>
                  <Access>public</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Source</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Form</Name>
                      <FullName>System.Windows.Forms.Form</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Initializes a new instance of the &lt;see cref="SpellItMainForm"/&gt; class.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SpellItMainForm</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.SpellItMainForm</FullName>
                      <DocComment>&lt;summary&gt;
Initializes a new instance of the &lt;see cref="SpellItMainForm"/&gt; class.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Initializes a new instance of the <see cref="SpellItMainForm" /> class.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>public SpellItMainForm()</Declaration>
                      <Access>public</Access>
                      <MethodKind>Constructor</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Show the practice form.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/14/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>PracticeWordsButton_Click</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.PracticeWordsButton_Click</FullName>
                      <DocComment>&lt;summary&gt;
Show the practice form.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;
&lt;created&gt;art2m,5/14/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void PracticeWordsButton_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellItMainForm.PracticeWordsButton_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellItMainForm.PracticeWordsButton_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Show the practice form.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/14/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>PracticeWordsMenuItem_Click</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.PracticeWordsMenuItem_Click</FullName>
                      <DocComment>&lt;summary&gt;
Show the practice form.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;
&lt;created&gt;art2m,5/14/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void PracticeWordsMenuItem_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellItMainForm.PracticeWordsMenuItem_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellItMainForm.PracticeWordsMenuItem_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Exit the program.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/14/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ExitButton_Click</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.ExitButton_Click</FullName>
                      <DocComment>&lt;summary&gt;
Exit the program.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;
&lt;created&gt;art2m,5/14/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void ExitButton_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellItMainForm.ExitButton_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellItMainForm.ExitButton_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Exit the program.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/14/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>ExitMenuItem_Click</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.ExitMenuItem_Click</FullName>
                      <DocComment>&lt;summary&gt;
 Exit the program.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;
&lt;created&gt;art2m,5/14/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void ExitMenuItem_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellItMainForm.ExitMenuItem_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellItMainForm.ExitMenuItem_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>InitializeControls</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.InitializeControls</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void InitializeControls()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Show the spelling list form.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/14/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SpellingListButton_Click</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.SpellingListButton_Click</FullName>
                      <DocComment>&lt;summary&gt;
 Show the spelling list form.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;
&lt;created&gt;art2m,5/14/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SpellingListButton_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellItMainForm.SpellingListButton_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellItMainForm.SpellingListButton_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>show the spelling list form.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/14/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SpellListMenuItem_Click</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.SpellListMenuItem_Click</FullName>
                      <DocComment>&lt;summary&gt;
 show the spelling list form.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;Instance containing the event data.&lt;/param&gt;
&lt;created&gt;art2m,5/14/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SpellListMenuItem_Click(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellItMainForm.SpellListMenuItem_Click.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellItMainForm.SpellListMenuItem_Click.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Center buttons on screen.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;param name="e"&gt;Instance containing the data.&lt;/param&gt;</CommentLine>
                      <CommentLine>&lt;created&gt;art2m,5/14/2019&lt;/created&gt;</CommentLine>
                      <CommentLine>&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>SpellItMainForm_Resize</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.SpellItMainForm_Resize</FullName>
                      <DocComment>&lt;summary&gt;
Center buttons on screen.
&lt;/summary&gt;
&lt;param name="sender"&gt;The source of the event.&lt;/param&gt;
&lt;param name="e"&gt;Instance containing the data.&lt;/param&gt;
&lt;created&gt;art2m,5/14/2019&lt;/created&gt;
&lt;changed&gt;art2m,5/14/2019&lt;/changed&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>private void SpellItMainForm_Resize(object sender, EventArgs e)</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>sender</Name>
                          <FullName>Art2MSpell.Source.SpellItMainForm.SpellItMainForm_Resize.sender</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>object sender</Declaration>
                          <Access />
                          <TypeFullName>System.Object</TypeFullName>
                          <TypeName>Object</TypeName>
                          <TypeAliasedName>object</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                      <Parameter>
                        <Properties>
                          <Name>e</Name>
                          <FullName>Art2MSpell.Source.SpellItMainForm.SpellItMainForm_Resize.e</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>EventArgs e</Declaration>
                          <Access />
                          <TypeFullName>System.EventArgs</TypeFullName>
                          <TypeName>EventArgs</TypeName>
                          <TypeAliasedName>EventArgs</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>SpellItMainForm.Designer.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellItMainForm.Designer.cs</FullPath>
          <SubType>Code</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/14/2019 10:04:18 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellItMainForm.Designer.cs</URL>
          <Filesize>10347</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>True</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellItMainForm.Designer.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell.Source</Name>
              <FullName>Art2MSpell.Source</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell.Source</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <CommentLines>
                  <CommentLine>&lt;summary&gt;</CommentLine>
                  <CommentLine>Required designer variable.</CommentLine>
                  <CommentLine>&lt;/summary&gt;</CommentLine>
                </CommentLines>
                <Properties>
                  <Name>SpellItMainForm</Name>
                  <FullName>Art2MSpell.Source.SpellItMainForm</FullName>
                  <DocComment />
                  <XmlDocComment />
                  <Kind>Class</Kind>
                  <Declaration>partial class SpellItMainForm</Declaration>
                  <Access>internal</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell.Source</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Form</Name>
                      <FullName>System.Windows.Forms.Form</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Required designer variable.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>components</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.components</FullName>
                      <DocComment>&lt;summary&gt;
Required designer variable.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Required designer variable.
</summary>
                      </XmlDocComment>
                      <Kind>Field</Kind>
                      <Declaration>private System.ComponentModel.IContainer components = null;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.ComponentModel.IContainer</TypeFullName>
                      <TypeName>IContainer</TypeName>
                      <TypeAliasedName>IContainer</TypeAliasedName>
                      <InitExpression>null</InitExpression>
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Clean up any resources being used.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                      <CommentLine>&lt;param name="disposing"&gt;true if managed resources should be disposed; otherwise, false.&lt;/param&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>Dispose</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.Dispose</FullName>
                      <DocComment>&lt;summary&gt;
Clean up any resources being used.
&lt;/summary&gt;
&lt;param name="disposing"&gt;true if managed resources should be disposed; otherwise, false.&lt;/param&gt;</DocComment>
                      <XmlDocComment />
                      <Kind>Method</Kind>
                      <Declaration>protected override void Dispose(bool disposing)</Declaration>
                      <Access>protected</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>True</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>True</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Parameters>
                      <Parameter>
                        <Properties>
                          <Name>disposing</Name>
                          <FullName>Art2MSpell.Source.SpellItMainForm.Dispose.disposing</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Parameter</Kind>
                          <Declaration>bool disposing</Declaration>
                          <Access />
                          <TypeFullName>System.Boolean</TypeFullName>
                          <TypeName>Boolean</TypeName>
                          <TypeAliasedName>bool</TypeAliasedName>
                          <Modifiers />
                        </Properties>
                      </Parameter>
                    </Parameters>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>Required method for Designer support - do not modify</CommentLine>
                      <CommentLine>the contents of this method with the code editor.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>InitializeComponent</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.InitializeComponent</FullName>
                      <DocComment>&lt;summary&gt;
Required method for Designer support - do not modify
the contents of this method with the code editor.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
Required method for Designer support - do not modify
the contents of this method with the code editor.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private void InitializeComponent()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>MainMenuMenuStrip</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.MainMenuMenuStrip</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.MenuStrip MainMenuMenuStrip;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.MenuStrip</TypeFullName>
                      <TypeName>MenuStrip</TypeName>
                      <TypeAliasedName>MenuStrip</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>fileToolStripMenuItem</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.fileToolStripMenuItem</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolStripMenuItem fileToolStripMenuItem;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolStripMenuItem</TypeFullName>
                      <TypeName>ToolStripMenuItem</TypeName>
                      <TypeAliasedName>ToolStripMenuItem</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>spellToolStripMenuItem</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.spellToolStripMenuItem</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolStripMenuItem spellToolStripMenuItem;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolStripMenuItem</TypeFullName>
                      <TypeName>ToolStripMenuItem</TypeName>
                      <TypeAliasedName>ToolStripMenuItem</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>mnuExit</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.mnuExit</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolStripMenuItem mnuExit;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolStripMenuItem</TypeFullName>
                      <TypeName>ToolStripMenuItem</TypeName>
                      <TypeAliasedName>ToolStripMenuItem</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>mnuNewSpellList</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.mnuNewSpellList</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolStripMenuItem mnuNewSpellList;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolStripMenuItem</TypeFullName>
                      <TypeName>ToolStripMenuItem</TypeName>
                      <TypeAliasedName>ToolStripMenuItem</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>spellItToolTip</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.spellItToolTip</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolTip spellItToolTip;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolTip</TypeFullName>
                      <TypeName>ToolTip</TypeName>
                      <TypeAliasedName>ToolTip</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>mnuDisplaySpellingWords</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.mnuDisplaySpellingWords</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.ToolStripMenuItem mnuDisplaySpellingWords;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.ToolStripMenuItem</TypeFullName>
                      <TypeName>ToolStripMenuItem</TypeName>
                      <TypeAliasedName>ToolStripMenuItem</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>ExitButton</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.ExitButton</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button ExitButton;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>flpButtons</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.flpButtons</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.FlowLayoutPanel flpButtons;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.FlowLayoutPanel</TypeFullName>
                      <TypeName>FlowLayoutPanel</TypeName>
                      <TypeAliasedName>FlowLayoutPanel</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnPracticeSpellingWords</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.btnPracticeSpellingWords</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnPracticeSpellingWords;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                  <CodeElement>
                    <CommentLines />
                    <Properties>
                      <Name>btnSpellingList</Name>
                      <FullName>Art2MSpell.Source.SpellItMainForm.btnSpellingList</FullName>
                      <DocComment />
                      <XmlDocComment />
                      <Kind>Field</Kind>
                      <Declaration>private System.Windows.Forms.Button btnSpellingList;</Declaration>
                      <Access>private</Access>
                      <TypeFullName>System.Windows.Forms.Button</TypeFullName>
                      <TypeName>Button</TypeName>
                      <TypeAliasedName>Button</TypeAliasedName>
                      <InitExpression />
                      <IsConstant>False</IsConstant>
                      <IsStatic>False</IsStatic>
                      <IsShadows>False</IsShadows>
                    </Properties>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
      <File>
        <Properties>
          <FileName>SpellItMainForm.resx</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellItMainForm.resx</FullPath>
          <SubType>Text</SubType>
          <Extension>.resx</Extension>
          <CustomToolOutput />
          <DateModified>5/14/2019 10:04:18 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>EmbeddedResource</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>EmbeddedResource</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellItMainForm.resx</URL>
          <Filesize>7314</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>True</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Source\SpellItMainForm.resx</LocalPath>
          <ModifiedBy />
        </Properties>
      </File>
      <File>
        <Properties>
          <FileName>App.config</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\App.config</FullPath>
          <SubType>Text</SubType>
          <Extension>.config</Extension>
          <CustomToolOutput />
          <DateModified>5/8/2019 1:55:38 PM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>None</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>None</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\App.config</URL>
          <Filesize>188</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\App.config</LocalPath>
          <ModifiedBy />
        </Properties>
      </File>
      <File>
        <Properties>
          <FileName>Hunspellx64.dll</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Hunspellx64.dll</FullPath>
          <SubType>Other</SubType>
          <Extension>.dll</Extension>
          <CustomToolOutput />
          <DateModified>5/5/2019 8:00:38 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>None</BuildAction>
          <CopyToOutputDirectory>2</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>None</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Hunspellx64.dll</URL>
          <Filesize>524288</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 8:04:39 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Hunspellx64.dll</LocalPath>
          <ModifiedBy />
        </Properties>
      </File>
      <File>
        <Properties>
          <FileName>Hunspellx86.dll</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Hunspellx86.dll</FullPath>
          <SubType>Other</SubType>
          <Extension>.dll</Extension>
          <CustomToolOutput />
          <DateModified>5/5/2019 8:00:38 AM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>None</BuildAction>
          <CopyToOutputDirectory>2</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>None</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Hunspellx86.dll</URL>
          <Filesize>442368</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 8:04:39 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Hunspellx86.dll</LocalPath>
          <ModifiedBy />
        </Properties>
      </File>
      <File>
        <Properties>
          <FileName>packages.config</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\packages.config</FullPath>
          <SubType>Text</SubType>
          <Extension>.config</Extension>
          <CustomToolOutput />
          <DateModified>5/9/2019 1:05:08 PM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>None</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>None</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\packages.config</URL>
          <Filesize>686</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 8:04:39 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\packages.config</LocalPath>
          <ModifiedBy />
        </Properties>
      </File>
      <File>
        <Properties>
          <FileName>Program.cs</FileName>
          <FullPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Program.cs</FullPath>
          <SubType>Code</SubType>
          <Extension>.cs</Extension>
          <CustomToolOutput />
          <DateModified>5/8/2019 3:18:46 PM</DateModified>
          <IsLink>False</IsLink>
          <BuildAction>Compile</BuildAction>
          <CopyToOutputDirectory>0</CopyToOutputDirectory>
          <IsSharedDesignTimeBuildInput>False</IsSharedDesignTimeBuildInput>
          <ItemType>Compile</ItemType>
          <IsCustomToolOutput>False</IsCustomToolOutput>
          <HTMLTitle />
          <CustomTool />
          <URL>file:///H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Program.cs</URL>
          <Filesize>571</Filesize>
          <CustomToolNamespace />
          <Author />
          <IsDependentFile>False</IsDependentFile>
          <IsDesignTimeBuildInput>False</IsDesignTimeBuildInput>
          <DateCreated>5/5/2019 10:15:58 AM</DateCreated>
          <LocalPath>H:\Documents\Visual Studio 2019\Projects\Working\Art2MSpell\Art2MSpell\Program.cs</LocalPath>
          <ModifiedBy />
        </Properties>
        <CodeElements>
          <CodeElement>
            <Properties>
              <Kind>Using</Kind>
              <Name>System</Name>
              <Alias />
            </Properties>
          </CodeElement>
          <CodeElement>
            <Properties>
              <Kind>Using</Kind>
              <Name>System.Windows.Forms</Name>
              <Alias />
            </Properties>
          </CodeElement>
          <CodeElement>
            <Properties>
              <Kind>Using</Kind>
              <Name>Art2MSpell.Source</Name>
              <Alias />
            </Properties>
          </CodeElement>
          <CodeElement>
            <Properties>
              <Name>Art2MSpell</Name>
              <FullName>Art2MSpell</FullName>
              <DocComment />
              <XmlDocComment />
              <Kind>Namespace</Kind>
              <Declaration>namespace Art2MSpell</Declaration>
              <Access />
            </Properties>
            <CodeElements>
              <CodeElement>
                <CommentLines />
                <Properties>
                  <Name>Program</Name>
                  <FullName>Art2MSpell.Program</FullName>
                  <DocComment />
                  <XmlDocComment />
                  <Kind>Class</Kind>
                  <Declaration>internal static class Program</Declaration>
                  <Access>internal</Access>
                  <IsShadows>False</IsShadows>
                  <Namespace>Art2MSpell</Namespace>
                  <IsAbstract>False</IsAbstract>
                </Properties>
                <Bases>
                  <Base>
                    <Properties>
                      <Name>Object</Name>
                      <FullName>System.Object</FullName>
                    </Properties>
                  </Base>
                </Bases>
                <ImplementedInterfaces />
                <CodeElements>
                  <CodeElement>
                    <CommentLines>
                      <CommentLine>&lt;summary&gt;</CommentLine>
                      <CommentLine>The main entry point for the application.</CommentLine>
                      <CommentLine>&lt;/summary&gt;</CommentLine>
                    </CommentLines>
                    <Properties>
                      <Name>Main</Name>
                      <FullName>Art2MSpell.Program.Main</FullName>
                      <DocComment>&lt;summary&gt;
The main entry point for the application.
&lt;/summary&gt;</DocComment>
                      <XmlDocComment>
                        <summary>
The main entry point for the application.
</summary>
                      </XmlDocComment>
                      <Kind>Method</Kind>
                      <Declaration>private static void Main()</Declaration>
                      <Access>private</Access>
                      <MethodKind>Method without return value</MethodKind>
                      <IsOverloaded>False</IsOverloaded>
                      <IsStatic>True</IsStatic>
                      <IsShadows>False</IsShadows>
                      <IsOverridable>False</IsOverridable>
                      <IsAbstract>False</IsAbstract>
                      <IsOverrides>False</IsOverrides>
                      <IsNotOverridable>False</IsNotOverridable>
                    </Properties>
                    <Attributes>
                      <Attribute>
                        <Properties>
                          <Name>STAThread</Name>
                          <FullName>System.STAThreadAttribute</FullName>
                          <DocComment />
                          <XmlDocComment />
                          <Kind>Attribute</Kind>
                          <Declaration>STAThread</Declaration>
                          <Access />
                          <Value />
                        </Properties>
                      </Attribute>
                    </Attributes>
                  </CodeElement>
                </CodeElements>
              </CodeElement>
            </CodeElements>
          </CodeElement>
        </CodeElements>
      </File>
    </Files>
  </Project>
</Projects>